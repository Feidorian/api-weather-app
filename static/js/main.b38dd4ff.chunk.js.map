{"version":3,"sources":["images/brandImg.svg","components/Nav.js","components/wallpaperList.js","images/wallpaper/wallpaper.jpg","images/wallpaper/wallpaper2.jpg","images/wallpaper/wallpaper3.jpg","images/wallpaper/wallpaper4.jpg","images/wallpaper/wallpaper5.jpg","images/wallpaper/wallpaper6.jpg","images/wallpaper/wallpaper7.jpg","images/wallpaper/wallpaper8.jpg","images/wallpaper/wallpaper9.jpg","images/wallpaper/wallpaper10.jpg","images/wallpaper/wallpaper11.jpg","images/wallpaper/wallpaper12.jpg","components/Options.js","images/pressure.svg","images/humidity.svg","components/Locations.js","components/Forecast.js","images/weather-icons/sunny.svg","App.js","reportWebVitals.js","index.js"],"names":["navReducer","state","action","type","selectedOption","data","inputValue","Nav","appState","appDispatcher","options","timeout","useRef","useReducer","navState","navDispatcher","AppBar","sx","position","backgroundColor","Toolbar","p","Grid","container","alignItems","direction","xs","md","item","width","Box","display","component","src","brandIcon","height","Typography","variant","fontWeight","ml","IconButton","onClick","color","sm","spacing","justifyContent","flex","py","collapseButton","flexGrow","lg","Autocomplete","borderRadius","getOptionLabel","option","address","value","onChange","e","newValue","onInputChange","newInputValue","renderInput","params","TextField","InputProps","size","placeholder","margin","startAdornment","InputAdornment","Stack","Button","wallpaperList","Options","Dialog","open","settings","onClose","fullWidth","DialogTitle","DialogContent","pb","mx","Container","Switch","checked","degUnit","Alert","fontSize","ImageList","cols","rowHeight","map","key","ImageListItem","backgroundImage","backgroundSize","cursor","wallpaper","Locations","useState","openOptions","setOpenOptions","px","border","borderColor","overflowX","locationList","index","mb","Paper","elevation","background","columnSpacing","current","date","city","alignSelf","getTempC","temp","getTempF","id","currentTarget","className","anchorEl","Boolean","MenuItem","dispatcher","Confirm","show","titleColor","fontFamily","useGoogleFont","confirmDeleteLocation","mt","icon","weatherStatus","timezone","sunrise","flexWrap","pressure","alt","style","humidity","windSpeed","visibility","Forecast","textAlign","selectedForecast","daily","day","dayTemp","minTemp","toFixed","lat","lon","sunset","sunny","shortDescription","description","nightTemp","mornTemp","eveTemp","maxTemp","App","use100vh","backgroundPosition","overflowY","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b38dd4ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brandImg.7eb91340.svg\";","import { useReducer, useRef } from 'react';\r\nimport { Box, AppBar, Toolbar, Grid, Autocomplete, TextField, InputAdornment, Button, Stack, Typography } from '@material-ui/core';\r\nimport brandIcon from \"../images/brandImg.svg\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst navReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'setSelectedOption':\r\n            return { ...state, selectedOption: action.data };\r\n        case 'setInputValue':\r\n            return { ...state, inputValue: action.data };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nfunction Nav({appState, appDispatcher}) {\r\n    const state = { selectedOption: null, inputValue: '', options: [], timeout: useRef(null)};\r\n    const [navState, navDispatcher] = useReducer(navReducer, state);\r\n    return (\r\n        <>\r\n            <AppBar sx={{position:'static',backgroundColor: 'black' }}>\r\n                <Toolbar sx={{p:'6px'}}>\r\n                    <Grid container sx={{ alignItems: 'center', direction: { xs: 'column', md: 'row' } }}>\r\n                        {/* brand container */}\r\n                        <Grid container item sx={{ alignItems: 'center', width: { xs: '1', md: 'auto' } }}>\r\n                            {/* brand logo */}\r\n                            <Grid item>\r\n                                <Box display='block' component='img' src={brandIcon} sx={{ width: '2.5rem', height: '2.5rem' }} />\r\n                            </Grid>\r\n                            {/* brand text */}\r\n                            <Grid item>\r\n                                <Typography variant='h6' sx={{fontWeight:'400'}}>API Weather App</Typography>\r\n                            </Grid>\r\n                            {/* nav collapse button  */}\r\n                            <Grid item sx={{ ml: 'auto' }}>\r\n                                <IconButton onClick={()=>appDispatcher({type:'toggleCollapseButton'})}>\r\n                                    <MenuIcon sx={{ color: 'white', display: { md: 'none', xs: 'block' } }} />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* search container */}\r\n                        <Grid item container direction={{ xs: 'column-reverse', sm: 'row' }} spacing='10' justifyContent='center' alignItems='center' flex='1' py='10px'\r\n                            display={{md:'flex', xs:`${appState.collapseButton? 'none' : 'flex'}`}}>\r\n                            {/* search field */}\r\n                            <Grid item flexGrow={{ sm:'1', md:'0.8', lg:'0.5'}} width={{xs:'100%', sm:'auto'}}>\r\n                                <Autocomplete sx={{ backgroundColor: 'white', borderRadius: '0.7rem' }}\r\n                                    getOptionLabel={(option) => option.address}\r\n                                    options={navState.options}\r\n                                    value={navState.selectedOption}\r\n                                    onChange={(e, newValue) => {\r\n                                        navDispatcher({ type: 'setSelectedOption', data: newValue });\r\n                                        navDispatcher({ type: 'setInputValue', data: newValue });\r\n                                    }}\r\n                                    onInputChange={(e, newInputValue) => {\r\n                                        navDispatcher({ type: 'setInputValue', data: newInputValue });\r\n                                    }}\r\n                                    renderInput={(params) =>\r\n                                        <TextField {...params}\r\n                                            InputProps={{\r\n                                                ...params.InputProps,\r\n                                                size: 'small',\r\n                                                placeholder: 'Enter the Name of a Location',\r\n                                                margin: 'dense',\r\n                                                startAdornment: (<InputAdornment position='start'><SearchIcon /></InputAdornment>)\r\n                                            }}\r\n                                        />}\r\n                                />\r\n                            </Grid>\r\n                            {/* button container  */}\r\n                            <Grid item>\r\n                                <Stack direction='row' spacing={1}>\r\n                                    <Button variant='outlined' size='small' sx={{ color: 'primary.light',  }} >Get Forecast</Button>\r\n                                    <Button variant='outlined' size='small' color='error' sx={{ color: 'error.light' }} onClick={()=>appDispatcher({type:'openSettings'})}>Options</Button>\r\n                                </Stack>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Nav;","import wallpaper from '../images/wallpaper/wallpaper.jpg';\r\nimport wallpaper2 from '../images/wallpaper/wallpaper2.jpg';\r\nimport wallpaper3 from '../images/wallpaper/wallpaper3.jpg';\r\nimport wallpaper4 from '../images/wallpaper/wallpaper4.jpg';\r\nimport wallpaper5 from '../images/wallpaper/wallpaper5.jpg';\r\nimport wallpaper6 from '../images/wallpaper/wallpaper6.jpg';\r\nimport wallpaper7 from '../images/wallpaper/wallpaper7.jpg';\r\nimport wallpaper8 from '../images/wallpaper/wallpaper8.jpg';\r\nimport wallpaper9 from '../images/wallpaper/wallpaper9.jpg';\r\nimport wallpaper10 from '../images/wallpaper/wallpaper10.jpg';\r\nimport wallpaper11 from '../images/wallpaper/wallpaper11.jpg';\r\nimport wallpaper12 from '../images/wallpaper/wallpaper12.jpg';\r\n\r\nconst wallpaperList = [wallpaper, wallpaper2, wallpaper3,\r\n    wallpaper4, wallpaper5, wallpaper6, wallpaper7, wallpaper8,\r\n    wallpaper9, wallpaper10, wallpaper11, wallpaper12];\r\n\r\nexport default wallpaperList;","export default __webpack_public_path__ + \"static/media/wallpaper.dac49862.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper2.a6e0b2eb.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper3.6c954cbe.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper4.fb7fb6d1.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper5.44dc4f33.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper6.3f11ff0a.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper7.17617cbc.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper8.cbb78813.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper9.002c2ae5.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper10.77df1d32.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper11.f87bb7ee.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper12.062de8f0.jpg\";","import { Alert, Box, Button, Container, Dialog, DialogContent, DialogTitle, Grid, IconButton, ImageList, ImageListItem, Switch, Typography } from '@material-ui/core';\r\nimport wallpaperList from './wallpaperList';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nfunction Options({ appState, appDispatcher }) {\r\n    return (\r\n        <Dialog open={appState.settings} onClose={() => appDispatcher({ type: 'closeSettings' })} fullWidth>\r\n            <DialogTitle sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <Typography variant='h5' sx={{ fontWeight: '500' }}>Options</Typography>\r\n                <IconButton sx={{ ml: 'auto' }} onClick={() => appDispatcher({ type: 'closeSettings' })}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent sx={{ pb:'0px'}}>\r\n                <Grid container spacing={1} direction='column'>\r\n                    <Grid item>\r\n                        <Button variant='contained' size=\"small\" color='error' sx={{mx:'auto', display:'block', borderRadius:'0.5rem'}}>Delete local Storage</Button>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Container sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            <Typography variant='h5' sx={{ fontWeight: '500' }}>°C</Typography>\r\n                            <Switch\r\n                                checked={appState.degUnit === 'F'}\r\n                                onChange={() => appDispatcher({ type: 'toggleDegUnit' })}>\r\n                            </Switch>\r\n                            <Typography variant='h5' sx={{ fontWeight: '500' }}>°F</Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Alert sx={{ mx: 'auto', width:'40%', display:'flex', alignItems:'center'}}>\r\n                            <Typography sx={{fontSize:'1.2rem', fontWeight:'500'}}>Choose a Wallpaper</Typography>\r\n                        </Alert>\r\n                        <ImageList cols={3} rowHeight={110} >\r\n                            {wallpaperList.map((item, key) =>\r\n                                <ImageListItem  key={key} onClick={() => appDispatcher({ type: 'setWallpaper', data: item })}\r\n                                    sx={{ backgroundImage: `url(${item})`, backgroundSize: 'cover', height: '8rem', cursor:'pointer', borderRadius:'0.6rem' }}>\r\n\r\n                                    <Box sx={{ display: `${appState.wallpaper === item ? 'flex' : 'none'}`, justifyContent: 'center', alignItems: 'center', height:'100%' }}>\r\n                                        <CheckCircleIcon sx={{ color: 'error.main', fontSize: '4rem' }} />\r\n                                    </Box>\r\n                                </ImageListItem>\r\n                            )}\r\n                        </ImageList>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default Options;","export default __webpack_public_path__ + \"static/media/pressure.2ad36da1.svg\";","export default __webpack_public_path__ + \"static/media/humidity.5da6ae3c.svg\";","import { useState } from 'react';\r\nimport { Grid, Paper, Box, Typography, Stack, IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\nimport { getTempC, getTempF } from \"../App\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport pressure from \"../images/pressure.svg\";\r\nimport humidity from \"../images/humidity.svg\";\r\nimport { Confirm } from \"notiflix\";\r\n\r\nfunction Locations({ appState, appDispatcher }) {\r\n    const [openOptions, setOpenOptions] = useState(null);\r\n    const confirmDeleteLocation = (dispatcher, index) => {\r\n        setOpenOptions(null);\r\n        Confirm.show(\r\n            \"❌ Confirm Deletion\",\r\n            \"Are you Sure you want to delete this location?\",\r\n            \"Yes\",\r\n            \"Cancel\",\r\n            () => dispatcher({ type: 'deleteForecast', data: index }),\r\n            () => { },\r\n            { titleColor: '#e66146', fontFamily: \"quicksand\", useGoogleFont: false }\r\n        )\r\n    }\r\n    return (\r\n        <Stack spacing={2} sx={{ backgroundColor: 'blu', px: '0.5rem' }}>\r\n            <Typography variant='h5'\r\n                sx={{\r\n                    backgroundColor: 'black', fontWeight: 'bold', color: 'primary.light',\r\n                    width: 'fit-content', p: '0.3rem', borderRadius: '0.5rem', border: '0.2rem solid', borderColor: 'warning.light'\r\n                }}>Dashboard</Typography>\r\n            <Grid container sx={{ overflowX: 'auto' }}>\r\n                {appState.locationList.map((item, index) =>\r\n                    <Grid item sx={{ width: 'fit-content', mb: '1rem' }}>\r\n                        <Paper elevation={3} sx={{ p: '0.6rem', background: 'black', color: 'white', border: '0.13rem solid white', borderRadius: '0.7rem' }}>\r\n                            {/* header */}\r\n                            <Grid container columnSpacing={2}>\r\n                                <Grid item width='fit-content' flexGrow='1' xs>\r\n                                    <Stack>\r\n                                        <Typography sx={{ color: 'error.light' }}>{item.current.date}</Typography>\r\n                                        <Typography variant='h6' sx={{}}>{item.city}</Typography>\r\n                                    </Stack>\r\n                                </Grid>\r\n\r\n                                <Grid item width='fit-content' alignSelf='center' flexGrow='0' xs>\r\n                                    <Stack direction='row' spacing={0.5} justifyContent='between'>\r\n                                        <Typography sx={{ color: 'warning.light', fontWeight: '500', fontSize: '2.5rem' }}>\r\n                                            {appState.degUnit === 'C' ? getTempC(item.current.temp) : getTempF(item.current.temp)}°{appState.degUnit}\r\n                                        </Typography>\r\n                                        <IconButton id=\"long-button\" onClick={(e) => setOpenOptions(e.currentTarget)} sx={{ color: 'white', alignSelf: 'start' }}>\r\n                                            <MoreVertIcon className='text-white hover:text-green-600' />\r\n                                        </IconButton>\r\n                                        <Menu anchorEl={openOptions} open={Boolean(openOptions)} onClose={() => setOpenOptions(null)}>\r\n                                            <MenuItem onClick={() => {setOpenOptions(null) }}>Select Location</MenuItem>\r\n                                            <MenuItem onClick={() => { setOpenOptions(null) }}>Update Location</MenuItem>\r\n                                            <MenuItem onClick={() => { confirmDeleteLocation(appDispatcher, index); setOpenOptions(null)}}>\r\n                                                Delete location\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* body */}\r\n                            <Grid container direction='row' justifyContent='between' width='100%' sx={{ backgroundColor: 'warning.mai' }}>\r\n                                {/* weather Status */}\r\n                                <Grid item flexGrow='0.1' sx={{mt:'-0.6rem'}}>\r\n                                    <Stack alignItems='center'>\r\n                                        <Box component='img' width='6rem' src={item.current.icon}  />\r\n                                        <Typography sx={{ mt: '-1.5rem', fontSize: '1.3rem', fontWeight: '500', color: 'warning.light' }}>{item.current.weatherStatus}</Typography>\r\n                                    </Stack>\r\n                                </Grid>\r\n\r\n                                {/* timezone status */}\r\n                                <Grid item flexGrow='1' xs>\r\n                                    <Stack alignItems='center'>\r\n                                        <Typography sx={{ fontWeight: '500', color: 'primary.light' }}>TimeZone</Typography>\r\n                                        <Typography sx={{ fontWeight: '400' }}>{item.current.timezone}</Typography>\r\n                                    </Stack>\r\n                                    <Stack direction='row' spacing={5} justifyContent='center'>\r\n                                        <Stack >\r\n                                            <Typography sx={{ color: 'primary.light', fontWeight: '500' }}>Sunrise</Typography>\r\n                                            <Typography sx={{ fontWeight: '400' }}>{item.current.sunrise}</Typography>\r\n                                        </Stack>\r\n                                        <Stack sx={{}}>\r\n                                            <Typography sx={{ color: 'primary.light', fontWeight: '500' }}>Sunrise</Typography>\r\n                                            <Typography sx={{ fontWeight: '400' }}>{item.current.sunrise}</Typography>\r\n                                        </Stack>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* footer  */}\r\n                            <Grid item xs sx={{ backgroundColor: 're', mt: '0.5rem' }}>\r\n                                <Stack direction='row' width='20rem' spacing={2} sx={{ flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                                    <Stack spacing='0.3rem' direction='row' alignItems='center'>\r\n                                        <Box component='img' width='1.4rem' src={pressure} alt=\"\" ></Box>\r\n                                        <Typography >Pressure: <span style={{ color: 'yellow' }}>{item.current.pressure} hPa</span></Typography>\r\n                                    </Stack>\r\n                                    <Stack spacing='0.2rem' direction='row' alignItems='center'>\r\n                                        <Box component='img' width='1.6rem' src={humidity} alt=\"\"></Box>\r\n                                        <Typography >Humidity: <span style={{ color: 'yellow' }}>{item.current.humidity}%</span></Typography>\r\n                                    </Stack>\r\n                                    <Stack spacing='-0.2rem' direction='row' alignItems='center'>\r\n                                        <Box component='i' width='1.6rem' className='fas fa-wind' />\r\n                                        <Typography >WindSpeed: <span style={{ color: 'yellow' }}>{item.current.windSpeed} m/s</span></Typography>\r\n                                    </Stack>\r\n                                    <Stack spacing='-0.2rem' direction='row' alignItems='center'>\r\n                                        <Box component='i' width='1.6rem' className='fas fa-smog' />\r\n                                        <Typography >Visibility: <span style={{ color: 'yellow' }}>{item.current.visibility} m</span></Typography>\r\n                                    </Stack>\r\n\r\n                                </Stack>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Stack>\r\n    )\r\n};\r\n\r\nexport default Locations;","import { useState } from 'react';\r\nimport { Grid, Paper, Box, Typography, Stack, IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\nimport { getTempC, getTempF } from \"../App\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport pressure from \"../images/pressure.svg\";\r\nimport humidity from \"../images/humidity.svg\";\r\nimport { Confirm } from \"notiflix\";\r\n\r\nfunction Forecast({ appState, appDispatcher }) {\r\n    const [openOptions, setOpenOptions] = useState(null);\r\n    const confirmDeleteLocation = (dispatcher, index) => {\r\n        setOpenOptions(null);\r\n        Confirm.show(\r\n            \"❌ Confirm Deletion\",\r\n            \"Are you Sure you want to delete this location?\",\r\n            \"Yes\",\r\n            \"Cancel\",\r\n            () => dispatcher({ type: 'deleteForecast', data: index }),\r\n            () => { },\r\n            { titleColor: '#e66146', fontFamily: \"quicksand\", useGoogleFont: false }\r\n        )\r\n    }\r\n    return (\r\n        <Stack spacing={2} sx={{ backgroundColor: 'blu', px: '0.5rem' }}>\r\n            <Typography variant='h5'\r\n                sx={{\r\n                    backgroundColor: 'black', fontWeight: 'bold', color: 'primary.light',\r\n                    width: 'fit-content', p: '0.3rem', borderRadius: '0.5rem', border: '0.2rem solid', borderColor: 'warning.light', textAlign:'center'\r\n                }}>\r\n                8-Day Forecast For {appState.locationList[appState.selectedForecast].city}\r\n            </Typography>\r\n            <Grid container sx={{ overflowX: 'auto' }}>\r\n                {(appState.locationList[appState.selectedForecast].daily || []).map((item, index) =>\r\n                    <Grid item sx={{ width: 'fit-content', mb: '1rem' }}>\r\n                        <Paper elevation={3} sx={{ p: '0.6rem', background: 'black', color: 'white', border: '0.13rem solid white', borderRadius: '0.7rem' }}>\r\n                            {/* header */}\r\n                            <Grid container columnSpacing={2}>\r\n                                <Grid item width='fit-content' flexGrow='1' mb='1rem' xs>\r\n                                    <Stack>\r\n                                        <Typography sx={{ color: 'error.light' }}>{item.date}</Typography>\r\n                                        <Typography variant='h5' sx={{ml:'1rem', fontWeight:'500'}}>{item.day}</Typography>\r\n                                    </Stack>\r\n                                </Grid>\r\n\r\n                                <Grid item width='fit-content' alignSelf='center' flexGrow='0' xs>\r\n                                    <Stack direction='row' spacing={0.5} justifyContent='between'>\r\n                                        <Typography sx={{ color: 'warning.light', fontWeight: '500', fontSize: '2.5rem' }}>\r\n                                            {appState.degUnit === 'C' ? getTempC(item.dayTemp) : getTempF(item.dayTemp)}°{appState.degUnit}\r\n                                        </Typography>\r\n                                        <IconButton id=\"long-button\" sx={{ color: 'white', alignSelf: 'start', visibility:'hidden' }}>\r\n                                            <MoreVertIcon className='text-white hover:text-green-600' />\r\n                                        </IconButton>\r\n                                       \r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* body */}\r\n                            <Grid container direction='row' justifyContent='between' width='100%' sx={{ backgroundColor: 'warning.mai' }}>\r\n                                {/* weather Status */}\r\n                                <Grid item flexGrow='0.1' sx={{mt:'-1.9rem'}}>\r\n                                    <Stack alignItems='center'>\r\n                                        <Box component='img' width='6rem' src={item.icon} sx={{ mt: '0' }} />\r\n                                        <Typography sx={{ mt: '-1.5rem', fontSize: '1.3rem', fontWeight: '500', color: 'warning.light' }}>{item.weatherStatus}</Typography>\r\n                                    </Stack>\r\n                                </Grid>\r\n\r\n                                {/* timezone status */}\r\n                                <Grid item  flexGrow='1' alignSelf='center' xs>\r\n                                     <Stack item direction='row' justifyContent='space-around'>\r\n                                        <Typography>\r\n                                            <Box component='span' sx={{ color: 'primary.light' }}>Min: </Box>\r\n                                            <Box component='span' sx={{ color: 'yellow' }}>\r\n                                                {appState.degUnit === 'C' ? getTempC(item.minTemp) : getTempF(item.minTemp)}°{appState.degUnit}\r\n                                            </Box>\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            <Box component='span' sx={{ color: 'primary.light' }}>Min: </Box>\r\n                                            <Box component='span' sx={{ color: 'yellow' }}>\r\n                                                {appState.degUnit === 'C' ? getTempC(item.minTemp) : getTempF(item.minTemp)}°{appState.degUnit}\r\n                                            </Box>\r\n                                        </Typography>\r\n                                    </Stack>\r\n\r\n                                    <Stack item direction='row' justifyContent='space-around'>\r\n                                        <Typography>\r\n                                            <Box component='span' sx={{ color: 'primary.light' }}>Day: </Box>\r\n                                            <Box component='span' sx={{ color: 'yellow' }}>\r\n                                                {appState.degUnit === 'C' ? getTempC(item.minTemp) : getTempF(item.minTemp)}°{appState.degUnit}\r\n                                            </Box>\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            <Box component='span' sx={{ color: 'primary.light' }}>Night: </Box>\r\n                                            <Box component='span' sx={{ color: 'yellow' }}>\r\n                                                {appState.degUnit === 'C' ? getTempC(item.minTemp) : getTempF(item.minTemp)}°{appState.degUnit}\r\n                                            </Box>\r\n                                        </Typography>\r\n                                    </Stack>\r\n\r\n                                    <Stack item direction='row' justifyContent='space-around'>\r\n                                        <Typography>\r\n                                            <Box component='span' sx={{ color: 'primary.light' }}>Morn: </Box>\r\n                                            <Box component='span' sx={{ color: 'yellow' }}>\r\n                                                {appState.degUnit === 'C' ? getTempC(item.minTemp) : getTempF(item.minTemp)}°{appState.degUnit}\r\n                                            </Box>\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            <Box component='span' sx={{ color: 'primary.light' }}>Eve: </Box>\r\n                                            <Box component='span' sx={{ color: 'yellow' }}>\r\n                                                {appState.degUnit === 'C' ? getTempC(item.minTemp) : getTempF(item.minTemp)}°{appState.degUnit}\r\n                                            </Box>\r\n                                        </Typography>\r\n                                    </Stack>\r\n                                    {/*\r\n                                    <Stack direction='row' spacing={5} justifyContent='center'>\r\n                                        <Stack >\r\n                                            <Typography sx={{ color: 'primary.light', fontWeight: '500' }}>Sunrise</Typography>\r\n                                            <Typography sx={{ fontWeight: '400' }}>{item.current.sunrise}</Typography>\r\n                                        </Stack>\r\n                                        <Stack sx={{}}>\r\n                                            <Typography sx={{ color: 'primary.light', fontWeight: '500' }}>Sunrise</Typography>\r\n                                            <Typography sx={{ fontWeight: '400' }}>{item.current.sunrise}</Typography>\r\n                                        </Stack>\r\n                                    </Stack> */}\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* footer  */}\r\n                            <Grid item xs sx={{ backgroundColor: 're', mt: '0.5rem' }}>\r\n                                <Stack direction='row' width='20rem' spacing={2} sx={{ flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                                    <Stack spacing='0.3rem' direction='row' alignItems='center'>\r\n                                        <Box component='img' width='1.4rem' src={pressure} alt=\"\" ></Box>\r\n                                        <Typography >Pressure: <span style={{ color: 'yellow' }}>{item.pressure} hPa</span></Typography>\r\n                                    </Stack>\r\n                                    <Stack spacing='0.2rem' direction='row' alignItems='center'>\r\n                                        <Box component='img' width='1.6rem' src={humidity} alt=\"\"></Box>\r\n                                        <Typography >Humidity: <span style={{ color: 'yellow' }}>{item.humidity}%</span></Typography>\r\n                                    </Stack>\r\n                                    <Stack spacing='-0.2rem' direction='row' alignItems='center'>\r\n                                        <Box component='i' width='1.6rem' className='fas fa-wind' />\r\n                                        <Typography >WindSpeed: <span style={{ color: 'yellow' }}>{item.windSpeed} m/s</span></Typography>\r\n                                    </Stack>\r\n                        \r\n                                </Stack>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Stack>\r\n    )\r\n};\r\n\r\nexport default Forecast;","export default __webpack_public_path__ + \"static/media/sunny.213f9a41.svg\";","import { useReducer } from 'react';\nimport { Box, Grid, Stack, Toolbar } from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Options from \"./components/Options\";\nimport Locations from \"./components/Locations\";\nimport Forecast from \"./components/Forecast\";\nimport wallpaperList from './components/wallpaperList';\nimport sunny from \"./images/weather-icons/sunny.svg\";\nimport { use100vh } from 'react-div-100vh';\n\nexport const getTempC = (temp) => ((temp - 32) * (5 / 9)).toFixed(0);\nexport const getTempF = (temp) => ((temp * (9 / 5) + 32)).toFixed(0);\n\nconst tempLocations = [\n  {\n    city: '8417 Spruce Hill Dr',\n    lat: '',\n    lon: '',\n    key: `${1234}${5678}`,\n    current: {\n      day: 'Monday',\n      date: 'July, 6th, 08:37am',\n      timezone: 'America/NewYork',\n      sunrise: '08:00am',\n      sunset: '07:00pm',\n      temp: '0',\n      icon: sunny,\n      weatherStatus: 'Sunny',\n      shortDescription: 'Light rain, gentle breeze.',\n      humidity: '100',\n      pressure: '100',\n      windSpeed: '200',\n      visibility: '300'\n    },\n    daily: [\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n    ]\n  },\n];\n\n\n\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n}\nconst state = { locationList: tempLocations, selectedForecast:0, settings: false, degUnit: 'F', collapseButton: false, wallpaper: wallpaperList[2 || getRandomInt(12)] };\nconst dispatcher = (state, action) => {\n  switch (action.type) {\n    case 'toggleCollapseButton':\n      return { ...state, collapseButton: !state.collapseButton }\n    case 'setWallpaper':\n      return { ...state, wallpaper: action.data }\n    case 'toggleDegUnit':\n      return { ...state, degUnit: state.degUnit === 'F' ? 'C' : 'F' }\n    case 'openSettings':\n      return { ...state, settings: true };\n    case 'closeSettings':\n      return { ...state, settings: false }\n    default:\n      return state;\n  }\n}\n\n\nfunction App() {\n  const [appState, appDispatcher] = useReducer(dispatcher, state);\n  const height = use100vh()\n  return (\n    <Grid container direction='column' height={height}>\n      <Grid item >\n        <Nav appState={appState} appDispatcher={appDispatcher} />\n      </Grid>\n      <Grid item sx={{ backgroundImage: `url(${appState.wallpaper})`, backgroundSize: 'cover', backgroundPosition: 'center', overflowY: 'auto', flex: '1' }}>\n        <Stack spacing={3} mt='2rem' >\n          <Locations appState={appState} appDispatcher={appDispatcher} />\n          {appState.locationList[appState.selectedForecast] && <Forecast appState={appState} appDispatcher={appDispatcher} />}\n        </Stack>\n      </Grid>\n\n      <Options appState={appState} appDispatcher={appDispatcher} />\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}