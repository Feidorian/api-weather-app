{"version":3,"sources":["images/brandImg.svg","components/NavBar.js","images/wallpapers/wallpaper10.jpg","images/humidity.svg","images/pressure.svg","components/Dashboard.js","components/Forecast.js","images/wallpapers/wallpaper.jpg","images/wallpapers/wallpaper2.jpg","images/wallpapers/wallpaper3.jpg","images/wallpapers/wallpaper4.jpg","images/wallpapers/wallpaper5.jpg","images/wallpapers/wallpaper6.jpg","images/wallpapers/wallpaper7.jpg","images/wallpapers/wallpaper8.jpg","images/wallpapers/wallpaper9.jpg","images/wallpapers/wallpaper11.jpg","images/wallpapers/wallpaper12.jpg","components/Options.js","images/weatherStates/sunny.svg","App.js","reportWebVitals.js","index.js"],"names":["Search","collapseButton","dispatcher","size","only","useState","value","setValue","inputValue","setInputValue","options","setOptions","timeout","useRef","useEffect","query","clearTimeout","current","setTimeout","body","JSON","stringify","target","fetch","then","response","json","data","results","map","item","address","formatted_address","location","geometry","name","slice","console","log","Hidden","mediaQuery","class","Autocomplete","id","className","getOptionLabel","option","filterOptions","x","onChange","e","newValue","onInputChange","newInputValue","renderInput","params","TextField","InputProps","placeholder","margin","startAdornment","InputAdornment","position","Button","variant","onClick","lon","lng","lat","hour","parseInt","moment","unix","dt","format","minute","date","formatCurrentData","daily","day","formatDailyData","toast","dark","type","color","NavBar","setCollapseButton","useCollapseButton","handleCollapseButton","AppBar","Icon","fontSize","alt","src","brandImg","Typography","mdUp","component","oastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Item","index","forecast","openOptions","setOpenOptions","style","minWidth","sx","city","tempUnit","temp","toFixed","IconButton","currentTarget","anchorEl","open","Boolean","onClose","MenuItem","Confirm","show","titleColor","fontFamily","useGoogleFont","onConfirmDeleteLocation","width","icon","marginTop","weatherStatus","timezone","sunrise","sunset","pressure","humidity","windSpeed","visibility","Dashboard","degUnit","Alert","severity","Grid","forecastList","key","dayTemp","minTemp","maxTemp","nightTemp","mornTemp","eveTemp","Forecast","selectedForecast","imageList","wallpaper","wallpaper2","wallpaper3","wallpaper4","wallpaper5","wallpaper6","wallpaper7","wallpaper8","wallpaper9","wallpaper10","wallpaper11","wallpaper12","Options","checked","setChecked","Dialog","openMenu","fullWidth","DialogTitle","DialogContent","Switch","ImageList","cols","rowHeight","ImageListItem","backgroundImage","backgroundSize","height","reducer","state","action","filter","_","length","App","useReducer","sunny","shortDescription","description","cover","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af2afe90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brandImg.7eb91340.svg\";","\r\nimport { AppBar, Typography, TextField, InputAdornment, Button, div, Icon, Hidden } from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport brandImg from \"../images/brandImg.svg\";\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Autocomplete } from \"@material-ui/core\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport moment from 'moment';\r\n\r\n\r\nconst useCollapseButton = () => {\r\n    const [collapseButton, setCollapseButton] = useState(false);\r\n    const handleCollapseButton = () => setCollapseButton(!collapseButton);\r\n\r\n    return [collapseButton, handleCollapseButton]\r\n}\r\n\r\nconst Search = ({ collapseButton, dispatcher, size, only }) => {\r\n    const [value, setValue] = useState(null);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const timeout = useRef(null);\r\n\r\n    // fetch a googlePlaces query whenever the search input changes\r\n    useEffect(() => {\r\n        /* :debug \r\n        console.log(inputValue);\r\n        console.log(value);\r\n        */\r\n\r\n        // do not fetch new googlePlaces queries when the user selects an option or when the input is an empty string\r\n        if (inputValue && value !== inputValue) {\r\n            let query = inputValue;\r\n            clearTimeout(timeout.current);\r\n            timeout.current = setTimeout(() => {\r\n                const url = \"https://muterehm3f.execute-api.us-east-2.amazonaws.com/official/apiweatherapp\";\r\n                const options = { \"method\": \"POST\", body: JSON.stringify({ target: 'googlePlaces', query: query }) }\r\n                fetch(url, options)\r\n                    .then(response => response.json())\r\n                    .then(data => data.results.map(item => {\r\n                        return { address: item.formatted_address, location: item.geometry.location, name: item.name }\r\n                    }).slice(0, 10)) // get only top 10 result\r\n                    .then(data => {\r\n                        /* :debug */\r\n                        console.log(data);\r\n                        return data\r\n                    })\r\n                    .then(data => setOptions(options => data ? data : options))\r\n\r\n            }, 200)\r\n        }\r\n    }, [inputValue, value])\r\n\r\n    const submitRequest = () => {\r\n        const formatCurrentData = (data) => {\r\n            let hour = parseInt(moment.unix(data.current.dt).format(\"HH\"));\r\n            let minute = moment.unix(data.current.dt).format(\"mm\");\r\n            hour = hour > 12 ? `${hour - 12}:${minute}pm` : `${hour}:${minute}am`;\r\n            let date = `${moment.unix(data.current.dt).format(\"MMM[,] Do,\")} ${hour}`;\r\n            data.current = { ...data.current, dt: date };\r\n            return data;\r\n        };\r\n\r\n        const formatDailyData = (data) => {\r\n            data.daily = data.daily.map(item => {\r\n                let hour = parseInt(moment.unix(item.dt).format(\"HH\"));\r\n                let minute = moment.unix(item.dt).format(\"mm\");\r\n                hour = hour > 12 ? `${hour - 12}:${minute}pm` : `${hour}:${minute}am`;\r\n                let date = `${moment.unix(item.dt).format(\"MMM[,] Do,\")} ${hour}`;\r\n                let day = moment.unix(item.dt).format(\"dddd\");\r\n                return { ...item, date:date, day:day };\r\n            });\r\n            return data;\r\n        }\r\n\r\n        if (value && inputValue && value === inputValue) {\r\n            /* :debug \r\n            console.log(\"inputs match\")\r\n            console.log(value.location.lng);\r\n            */\r\n            const url = \"https://muterehm3f.execute-api.us-east-2.amazonaws.com/official/apiweatherapp\";\r\n            let lon = value.location.lng;\r\n            let lat = value.location.lat;\r\n            const options = { \"method\": \"POST\", body: JSON.stringify({ target: 'openWeather', lon: lon, lat: lat }) }\r\n            fetch(url, options)\r\n                .then(response => response.json())\r\n                .then(data => formatCurrentData(data))\r\n                .then(data => formatDailyData(data))\r\n                .then(data => console.log(data))\r\n        }\r\n        else {\r\n            /* :debug\r\n            console.log(\"inputs do not match\")\r\n            */\r\n            toast.dark('⛔️ Invalid location provided!')\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n        <Hidden mediaQuery only={only}>\r\n            <div class={`space-x-2 ${collapseButton ? 'hidden' : 'contents'}`} >\r\n\r\n                <Autocomplete id='search' className={size}\r\n                    getOptionLabel={(option) => option.address}\r\n                    options={options}\r\n                    filterOptions={(x) => x}\r\n                    value={value}\r\n                    onChange={(e, newValue) => {\r\n                        setValue(newValue);\r\n                        setInputValue(newValue);\r\n                    }}\r\n                    onInputChange={(e, newInputValue) => {\r\n                        setInputValue(newInputValue);\r\n                    }}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                            InputProps={{\r\n                                ...params.InputProps,\r\n                                size: 'small',\r\n                                placeholder: 'Enter the Name of a Location',\r\n                                margin: 'dense',\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            class={`w-full bg-white text-black rounded-xl `} />}\r\n                />\r\n\r\n                <div className='flex space-x-2 mb-2 sm:mb-0'>\r\n                    <Button size='small' variant=\"outlined\" className='h-10 lg:self-center' onClick={submitRequest}>Get Forecast</Button>\r\n                    <Button onClick={()=>dispatcher({type:'openMenu'})} size='small' variant='outlined' color='error' className='h-10 lg:self-center'>Options</Button>\r\n                </div>\r\n            </div>\r\n        </Hidden>\r\n\r\n    )\r\n}\r\n\r\n\r\nfunction NavBar({ dispatcher }) {\r\n    const [collapseButton, handleCollapseButton] = useCollapseButton();\r\n    return (\r\n\r\n        <AppBar class='bg-black text-white p-2 py-3  w-full'>\r\n            <div id='nav-row' class='flex'>\r\n                <div class='flex space-x-1 items-center'>\r\n                    <Icon fontSize='large'><img alt='brand visual' src={brandImg} /></Icon>\r\n                    <Typography variant='h6'>API Weather App</Typography>\r\n                </div>\r\n                <div class='flex justify-center items-center flex-grow'>\r\n                    <Search dispatcher={dispatcher} size='w-5/12 mx-2' only={['xs', 'sm']} />\r\n                </div>\r\n                <Hidden mdUp>\r\n                    <div class='ml-auto self-center' component='button' onClick={handleCollapseButton} >\r\n                        <MenuIcon color='white' fontSize='large' />\r\n                    </div>\r\n                </Hidden>\r\n            </div>\r\n\r\n            <div class='flex justify-center items-center flex-grow'>\r\n                <Search dispatcher={dispatcher} collapseButton={collapseButton} size='w-5/12' only={['xs', 'lg', 'md', 'xl']} />\r\n            </div>\r\n            <div class='flex flex-col-reverse justify-center items-center flex-grow'>\r\n                <Search dispatcher={dispatcher} collapseButton={collapseButton} size='w-11/12' only={['sm', 'lg', 'md', 'xl']} />\r\n            </div>\r\n            <ToastContainer oastContainer\r\n                position=\"bottom-left\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={true}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                draggable\r\n                pauseOnHover className='flex flex-col items-start mb-2' />\r\n        </AppBar>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/wallpaper10.77df1d32.jpg\";","export default __webpack_public_path__ + \"static/media/humidity.5da6ae3c.svg\";","export default __webpack_public_path__ + \"static/media/pressure.2ad36da1.svg\";","\r\nimport { Menu, MenuItem, Typography } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/core\";\r\nimport { Grid, IconButton, div } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport humidity from \"../images/humidity.svg\";\r\nimport pressure from \"../images/pressure.svg\";\r\nimport { useState } from 'react';\r\nimport { Confirm } from \"notiflix\";\r\n\r\n\r\n\r\nconst Item = ({ data, index, dispatcher, forecast}) => {\r\n    const [openOptions, setOpenOptions] = useState(null);\r\n    const onConfirmDeleteLocation = (dispatcher, index) => {\r\n        setOpenOptions(null);\r\n        Confirm.show(\r\n            \"❌ Confirm Deletion\",\r\n            \"Are you Sure you want to delete this location?\",\r\n            \"Yes\",\r\n            \"Cancel\",\r\n            () => dispatcher({type:'deleteForecast', data:index}),\r\n            () => {},\r\n            {\r\n                titleColor: '#e66146',\r\n                fontFamily: \"quicksand\",\r\n                useGoogleFont: false\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div key={data} class=' bg-black text-white flex rounded-lg p-3 border-2 flex flex-col' style={{ minWidth: '21rem' }}>\r\n            <div id='header' class='flex flex-grow justify-between'>\r\n                <div id='location-date' class='w-6/12'>\r\n                    <Typography variant='p' className='font-medium' sx={{ color: 'error.main' }}>\r\n                        {data.current.date}\r\n                    </Typography>\r\n                    <Typography variant='p' className='block  font-medium ' style={{ fontSize: '130%' }}>\r\n                        {data.city}\r\n                    </Typography>\r\n                </div>\r\n\r\n                <div id='temp' class='w-5/12 text-center self-center'>\r\n                    <Typography variant='p' className='block text-4xl font-medium' sx={{ color: 'warning.light' }}>\r\n                        {forecast.tempUnit==='C'? ((data.current.temp - 32) * (5/9)).toFixed(2) : data.current.temp}°{forecast.tempUnit} </Typography>\r\n                </div>\r\n\r\n                <div id='delete-button' className='w-1/12'>\r\n                    <IconButton id=\"long-button\" onClick={(e) => setOpenOptions(e.currentTarget)}>\r\n                        <MoreVertIcon className='text-white hover:text-green-600' />\r\n                    </IconButton>\r\n                    <Menu anchorEl={openOptions} open={Boolean(openOptions)} onClose={() => setOpenOptions(null)}>\r\n                        <MenuItem onClick={() => { dispatcher({ type: 'setSelectedForecast', data: index }); setOpenOptions(null) }}>Select Location</MenuItem>\r\n                        <MenuItem >Update Location</MenuItem>\r\n                        <MenuItem onClick={() => onConfirmDeleteLocation(dispatcher,index)}>\r\n                            Delete location\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n\r\n            <div id='content' >\r\n                <div class='flex items-center mb-3'>\r\n                    <div id='weather-status' class='w-5/12 bg-red-90 flex flex-col items-center justify-start'>\r\n                        <img width='80' className='block' src={data.current.icon} alt='weather' style={{ marginTop: '-20px' }} />\r\n                        <Typography variant='p' className='text-2xl' sx={{ marginTop: '-15px' }}>{data.current.weatherStatus}</Typography>\r\n                    </div>\r\n\r\n                    <div className='w-7/12 flex flex-col'>\r\n                        <div className='self-center text-center font-medium'><span className='text-blue-500'>TimeZone</span> <br />{data.current.timezone}</div>\r\n                        <div className='flex justify-around'>\r\n                            <div className='text-center'><span className='text-blue-500 font-medium'>Sunrise</span> <br />{data.current.sunrise}</div>\r\n                            <div className='text-center'><span className='text-blue-500 font-medium'>Sunset</span> <br /> {data.current.sunset}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='flex flex-wrap space-x-2 justify-around' style={{ width: '20rem' }}>\r\n                    <Typography class='block flex items-center'><img width='23' className='inline-block mr-1' alt='' src={pressure} /> Pressure : <span style={{ color: 'yellow' }}>{data.current.pressure} hPa</span></Typography>\r\n                    <Typography class='block'><img width='25' className='inline-block' alt='' src={humidity} />Humidity : <span style={{ color: 'yellow' }}>{data.current.humidity}%</span></Typography>\r\n                    <Typography class='block'> <i class=\"fas fa-wind\" /> WindSpeed : <span style={{ color: 'yellow' }}>{data.current.windSpeed} m/s</span></Typography>\r\n                    <Typography class='block'><i class=\"fas fa-smog\" /> Visibility  : <span style={{ color: 'yellow' }}>{data.current.visibility} m</span></Typography>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nfunction Dashboard({ degUnit, forecast, dispatcher }) {\r\n\r\n    return (\r\n        <div id='dashboard' class='p-4 bg-red-90 flex flex-col'>\r\n            <Alert severity='info' className='mx-auto flex justify-center'>\r\n                <Typography class='text-blue-900 font-medium'>\r\n                    Cards are horizontally scrollable (especially on smaller Screen).\r\n                </Typography>\r\n            </Alert>\r\n\r\n            <Typography class='self-start mt-3 block  text-2xl border-2  border-yellow-200\r\n                font-medium  bg-black p-2 rounded-lg text-blue-400' >Dashboard</Typography>\r\n\r\n\r\n            <Grid class='flex justify-start overflow-x-auto space-x-3 mt-4'>\r\n                {forecast.forecastList.map((data, index) => <Item data={data} degUnit={degUnit} dispatcher={dispatcher} forecast={forecast} index={index}/>)}\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dashboard;","\r\nimport { Typography, div, IconButton } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport humidity from \"../images/humidity.svg\";\r\nimport pressure from \"../images/pressure.svg\";\r\n\r\nconst Item = ({ data, key, forecast }) => (\r\n    <div class='bg-green-800 text-white flex rounded-lg p-3 border-2 flex flex-col' style={{ minWidth: '20rem' }}>\r\n        <div id='header' class='flex flex-grow justify-between'>\r\n            <div id='location-date' class='w-6/12'>\r\n                <Typography variant='p' className='font-medium' sx={{ color: 'error.light' }}>\r\n                    {data.date}\r\n                </Typography>\r\n                <Typography variant='p' className='block text-3xl font-medium'>\r\n                    {data.day}\r\n                </Typography>\r\n            </div>\r\n\r\n            <div id='temp' class='w-5/12 text-center self-center'>\r\n                <Typography variant='p' className='block text-4xl font-medium' sx={{ color: 'warning.light' }}>\r\n                    {forecast.tempUnit === 'C' ? ((data.dayTemp - 32) * (5 / 9)).toFixed(2) : data.dayTemp}°{forecast.tempUnit}</Typography>\r\n            </div>\r\n\r\n            <div id='delete-button' className='w-1/12'>\r\n                {/* <IconButton id=\"long-button\" onClick={\"\"}>\r\n                    <MoreVertIcon className='text-white hover:text-green-600' />\r\n                </IconButton> */}\r\n            </div>\r\n        </div>\r\n\r\n        <div id='content'>\r\n            <div class='flex mb-3 mt-2'>\r\n                <div id='weather-status' class='w-5/12 bg-red-90 flex flex-col items-center justify-start'>\r\n                    <img width='80' className='block' src={data.icon} alt='weather' style={{ marginTop: '-20px' }} />\r\n                    <Typography variant='p' className='text-2xl' sx={{ marginTop: '-15px' }}>{data.weatherStatus}</Typography>\r\n                </div>\r\n\r\n                <div className='w-7/12 flex flex-col space-y-2 mt-1 font-medium'>\r\n                    <div className='flex justify-around'>\r\n                        <div>Min: {forecast.tempUnit === 'C' ? data.minTemp : (data.minTemp * 9 / 5) + 32}°{forecast.tempUnit}</div>\r\n                        <div>Max: {forecast.tempUnit === 'C' ? data.maxTemp : (data.maxTemp * 9 / 5) + 32}°{forecast.tempUnit}</div>\r\n                    </div>\r\n                    <div className='flex justify-around'>\r\n                        <div>Day: {forecast.tempUnit === 'C' ? data.dayTemp : (parseInt(data.dayTemp) * 9 / 5 + 32)}°{forecast.tempUnit}</div>\r\n                        <div>Night {forecast.tempUnit === 'C' ? data.nightTemp : (parseInt(data.nightTemp) * 9 / 5 + 32)}°{forecast.tempUnit}</div>\r\n                    </div>\r\n                    <div className='flex justify-around'>\r\n                        <div>Morn: {forecast.tempUnit === 'C' ? data.mornTemp : (parseInt(data.mornTemp) * 9 / 5 + 32)}°{forecast.tempUnit}</div>\r\n                        <div>Eve: {forecast.tempUnit === 'C' ? data.eveTemp : (parseInt(data.eveTemp) * 9 / 5 + 32)}°{forecast.tempUnit}</div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className='flex flex-wrap space-x-2 justify-center items-center' style={{ width: '20rem' }}>\r\n                <Typography class='block flex items-center'><img width='23' className='inline-block mr-1' alt='' src={pressure} /> Pressure : <span style={{ color: 'yellow' }}>{data.pressure} hPa</span></Typography>\r\n                <Typography class='block'><img width='25' className='inline-block' alt='' src={humidity} />Humidity : <span style={{ color: 'yellow' }}>{data.humidity}%</span></Typography>\r\n                <Typography class='block'> <i class=\"fas fa-wind\" /> WindSpeed : <span style={{ color: 'yellow' }}>{data.windSpeed} m/s</span></Typography>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nfunction Forecast({forecast, dispatcher }) {\r\n    return (\r\n        < div className = 'w-screen mt-8 p-4 text-white flex flex-col' >\r\n            <Typography variant='p' className='self-start text-2xl border-2  border-yellow-200\r\n                font-medium  bg-black p-2 rounded-lg text-blue-400  '>Forecast For {forecast.selectedForecast.city}</Typography>\r\n\r\n            <div className='flex justify-start overflow-x-auto space-x-3 mt-4 mb-28'>\r\n                {forecast.selectedForecast.daily.map((data) => <Item data={data} key={data} forecast={forecast} />)}\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Forecast;","export default __webpack_public_path__ + \"static/media/wallpaper.dac49862.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper2.a6e0b2eb.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper3.6c954cbe.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper4.fb7fb6d1.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper5.44dc4f33.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper6.3f11ff0a.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper7.17617cbc.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper8.cbb78813.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper9.002c2ae5.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper11.f87bb7ee.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper12.062de8f0.jpg\";","import { Alert, div, DialogContent, ImageList, ImageListItem, Switch, Typography } from \"@material-ui/core\";\r\nimport { Dialog, DialogTitle, IconButton } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState } from 'react'\r\nimport wallpaper from '../images/wallpapers/wallpaper.jpg';\r\nimport wallpaper2 from '../images/wallpapers/wallpaper2.jpg';\r\nimport wallpaper3 from '../images/wallpapers/wallpaper3.jpg';\r\nimport wallpaper4 from '../images/wallpapers/wallpaper4.jpg';\r\nimport wallpaper5 from '../images/wallpapers/wallpaper5.jpg';\r\nimport wallpaper6 from '../images/wallpapers/wallpaper6.jpg';\r\nimport wallpaper7 from '../images/wallpapers/wallpaper7.jpg';\r\nimport wallpaper8 from '../images/wallpapers/wallpaper8.jpg';\r\nimport wallpaper9 from '../images/wallpapers/wallpaper9.jpg';\r\nimport wallpaper10 from '../images/wallpapers/wallpaper10.jpg';\r\nimport wallpaper11 from '../images/wallpapers/wallpaper11.jpg';\r\nimport wallpaper12 from '../images/wallpapers/wallpaper12.jpg';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\n\r\nconst imageList = [wallpaper, wallpaper2, wallpaper3, wallpaper4, wallpaper5, wallpaper6, wallpaper7, wallpaper8,\r\n    wallpaper9, wallpaper10, wallpaper11, wallpaper12]\r\n\r\n\r\n\r\nfunction Options({ forecast, dispatcher }) {\r\n    const [checked, setChecked] = useState(true);\r\n    const handleChecked = () => {\r\n        if (checked) {\r\n            dispatcher({ type: 'setTempDegC' });\r\n        }\r\n        else {\r\n        dispatcher({ type: 'setTempDegF' })\r\n    };\r\n    setChecked(!checked);\r\n}\r\n\r\nreturn (\r\n    <Dialog onClose={() => dispatcher({ type: 'closeMenu' })} open={forecast.openMenu} fullWidth>\r\n        <div class='p-2' >\r\n            <DialogTitle class='w-100 flex'>\r\n                <Typography class='font-medium'>Options</Typography>\r\n                <IconButton class='ml-auto' onClick={() => dispatcher({ type: 'closeMenu' })}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent class='p-2'>\r\n                <div class='flex items-center justify-center'>\r\n                    <Typography class='font-medium text-2xl'>°C</Typography>\r\n                    <Switch\r\n                        checked={checked}\r\n                        onChange={handleChecked}>\r\n                    </Switch>\r\n                    <Typography class='font-medium text-2xl'>°F</Typography>\r\n                </div>\r\n                <Alert component='div' className='mx-auto mb-2 w-52'>Choose a Wallpaper</Alert>\r\n                <ImageList cols={3} rowHeight={156} >\r\n                    {imageList.map((item, key) =>\r\n                        <ImageListItem onClick={() => dispatcher({ type: 'setWallpaper', data: item })} class='rounded-lg flex items-center justify-center cursor-pointer'\r\n                            style={{ backgroundImage: `url(${item})`, backgroundSize: 'cover', height: '8rem' }}>\r\n\r\n                            <div className={`${forecast.wallpaper === item ? 'inline-block' : 'invisible'}`}><CheckCircleIcon sx={{ color: 'error.main', fontSize: '4rem' }} /></div>\r\n                        </ImageListItem>\r\n                    )}\r\n                </ImageList>\r\n\r\n            </DialogContent>\r\n        </div>\r\n    </Dialog>\r\n)\r\n};\r\n\r\n\r\nexport default Options;","export default __webpack_public_path__ + \"static/media/sunny.213f9a41.svg\";","import React, { useState, useReducer, useEffect } from 'react';\nimport NavBar from \"./components/NavBar\";\nimport cover from \"./images/wallpapers/wallpaper10.jpg\";\nimport Dashboard from \"./components/Dashboard\";\nimport Forecast from \"./components/Forecast\";\nimport Options from \"./components/Options\";\nimport { Container, div } from '@material-ui/core';\nimport sunny from \"./images/weatherStates/sunny.svg\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'deleteForecast':\n      return {\n        ...state,\n        forecastList: state.forecastList.filter((_, index) => index != action.data),\n        selectedForecast: (state.selectedForecast === state.forecastList[action.data]?\n          (state.forecastList.length === 1 ? null :\n            state.forecastList[action.data === 0 ? state.forecastList.length - 1 : action.data - 1]) : state.selectedForecast)\n      };\n    case 'setSelectedForecast':\n      return { ...state, selectedForecast: (state.forecastList[action.data] || null) };\n    case 'setTempDeg':\n      return { ...state };\n    case 'setWallpaper':\n      return { ...state, wallpaper: action.data };\n    case 'openMenu':\n      return { ...state, openMenu: true };\n    case 'closeMenu':\n      return { ...state, openMenu: false };\n    case 'setTempDegC':\n      return { ...state, tempUnit:'C' };\n    case 'setTempDegF':\n      return { ...state, tempUnit:'F'};\n  }\n}\n\nconst getData = () => [\n  {\n    city: '8417 Spruce Hill Dr',\n    lat: '',\n    lon: '',\n    key: `${1234}${5678}`,\n    current: {\n      day: 'Monday',\n      date: 'July, 6th, 08:37am',\n      timezone: 'America/NewYork',\n      sunrise: '08:00am',\n      sunset: '07:00pm',\n      temp: '0',\n      icon: sunny,\n      weatherStatus: 'Sunny',\n      shortDescription: 'Light rain, gentle breeze.',\n      humidity: '100',\n      pressure: '100',\n      windSpeed: '200',\n      visibility: '300'\n    },\n    daily: [\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      }\n    ]\n  },\n\n\n\n  {\n    city: 'Cameroon',\n    lat: '',\n    lon: '',\n    key: `${1234}${5678}`,\n    current: {\n      day: 'Monday',\n      date: 'July, 6th, 08:37am',\n      timezone: 'America/NewYork',\n      sunrise: '08:00am',\n      sunset: '07:00pm',\n      temp: '0',\n      icon: sunny,\n      weatherStatus: 'Sunny',\n      shortDescription: 'Light rain, gentle breeze.',\n      humidity: '100',\n      pressure: '100',\n      windSpeed: '200',\n      visibility: '300'\n    },\n    daily: [\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      }\n    ]\n  }\n\n];\n\nfunction App() {\n\n  const [forecast, dispatcher] = useReducer(reducer,\n    {\n      forecastList: getData(),\n      selectedForecast: null,\n      wallpaper: cover,\n      tempUnit: 'F',\n      openMenu: false\n    });\n\n  useEffect(() => {\n    dispatcher({ type: 'setSelectedForecast', data: 0 })\n  }, [dispatcher])\n\n\n  return (\n    <div class='h-screen break-words flex flex-col' style={{ overflow: 'hidden', backgroundImage: `url(${forecast.wallpaper})`, backgroundSize: 'cover' }}>\n      <NavBar dispatcher={dispatcher} forecast={forecast} />\n      <div class=\"overflow-x-auto\">\n        <Dashboard forecast={forecast} dispatcher={dispatcher} />\n        {forecast.selectedForecast && <Forecast forecast={forecast} dispatcher={dispatcher} />}\n        <Options forecast={forecast} dispatcher={dispatcher} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <App />\n     \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}