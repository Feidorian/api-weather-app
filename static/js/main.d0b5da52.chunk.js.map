{"version":3,"sources":["images/brandImg.svg","components/Nav.js","components/wallpaperList.js","images/wallpaper/wallpaper.jpg","images/wallpaper/wallpaper2.jpg","images/wallpaper/wallpaper3.jpg","images/wallpaper/wallpaper4.jpg","images/wallpaper/wallpaper5.jpg","images/wallpaper/wallpaper6.jpg","images/wallpaper/wallpaper7.jpg","images/wallpaper/wallpaper8.jpg","images/wallpaper/wallpaper9.jpg","images/wallpaper/wallpaper10.jpg","images/wallpaper/wallpaper11.jpg","images/wallpaper/wallpaper12.jpg","components/Options.js","images/pressure.svg","images/humidity.svg","components/Locations.js","components/Forecast.js","images/weather-icons/sunny.svg","App.js","reportWebVitals.js","index.js"],"names":["getDay","unixTime","moment","unix","format","getDate","hour","parseInt","minute","getTime","makeOpenWeatherApiRequest","dispatcher","actionType","data","fetch","body","JSON","stringify","target","lon","lat","then","response","json","console","log","resData","key","current","day","dt","date","timezone","sunrise","sunset","temp","icon","weather","weatherStatus","main","shortDescription","description","humidity","pressure","windSpeed","wind_speed","visibility","formatCurrentData","daily","map","d","item","dayTemp","nightTemp","night","mornTemp","morn","eveTemp","eve","minTemp","min","maxTemp","max","formatDailyData","type","catch","error","Report","failure","message","navReducer","state","action","selectedOption","options","inputValue","Nav","appState","appDispatcher","timeout","useRef","useReducer","navState","navDispatcher","useEffect","query","clearTimeout","setTimeout","results","length","Error","address","formatted_address","name","location","geometry","filter","i","idx","err","AppBar","sx","position","backgroundColor","Toolbar","p","Grid","container","alignItems","direction","xs","md","width","Box","display","component","src","brandIcon","height","Typography","variant","fontWeight","ml","IconButton","onClick","color","sm","spacing","justifyContent","flex","py","collapseButton","flexGrow","lg","Autocomplete","borderRadius","getOptionLabel","option","filterOptions","x","value","onChange","e","newValue","onInputChange","newInputValue","renderInput","params","TextField","InputProps","size","placeholder","margin","startAdornment","InputAdornment","Stack","Button","newLocation","city","lng","svgSize","messageFontSize","messageColor","wallpaperList","Options","Dialog","open","settings","onClose","fullWidth","DialogTitle","DialogContent","pb","mx","Container","Switch","checked","degUnit","Alert","fontSize","ImageList","cols","rowHeight","ImageListItem","backgroundImage","backgroundSize","cursor","wallpaper","Item","useState","openOptions","setOpenOptions","mb","Paper","elevation","background","border","columnSpacing","alignSelf","getTempC","getTempF","id","currentTarget","className","anchorEl","Boolean","MenuItem","Confirm","show","titleColor","fontFamily","useGoogleFont","mt","textAlign","flexWrap","alt","style","Locations","px","severity","borderColor","overflowX","locationList","minWidth","maxWidth","Forecast","selectedForecast","toFixed","find","App","use100vh","backgroundPosition","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","warn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0b5da52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brandImg.7eb91340.svg\";","import { useReducer, useRef, useEffect } from 'react';\r\nimport { Box, AppBar, Toolbar, Grid, Autocomplete, TextField, InputAdornment, Button, Stack, Typography } from '@material-ui/core';\r\nimport brandIcon from \"../images/brandImg.svg\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport moment from 'moment';\r\nimport { Report } from \"notiflix\";\r\n\r\nexport const getDay = (unixTime) => {\r\n    return moment.unix(unixTime).format(\"dddd\");\r\n};\r\nexport const getDate = (unixTime) => {\r\n    let hour = parseInt(moment.unix(unixTime).format(\"HH\"));\r\n    let minute = moment.unix(unixTime).format(\"mm\");\r\n    hour = hour > 12 ? `${hour - 12}:${minute}pm` : `${hour}:${minute}am`;\r\n    let date = `${moment.unix(unixTime).format(\"MMM, Do,\")} ${hour}`;\r\n    return date;\r\n};\r\nexport const getDateOnly = (unixTime) => {\r\n    return moment.unix(unixTime).format(\"MMM, Do, YYYY\");\r\n}\r\n\r\nexport const getTime = (unixTime) => {\r\n    let hour = parseInt(moment.unix(unixTime).format(\"HH\"));\r\n    let minute = moment.unix(unixTime).format(\"mm\");\r\n    hour = hour > 12 ? `${hour - 12}:${minute}pm` : `${hour}:${minute}am`;\r\n    return hour;\r\n}\r\n\r\nexport const formatCurrentData = (data) => {\r\n    return {\r\n        day: getDay(data.current.dt),\r\n        date: getDate(data.current.dt),\r\n        timezone: data.timezone,\r\n        sunrise: getTime(data.current.sunrise),\r\n        sunset: getTime(data.current.sunset),\r\n        temp: data.current.temp,\r\n        icon: data.current.weather[0].icon,\r\n        weatherStatus: data.current.weather[0].main,\r\n        shortDescription: data.current.weather[0].description,\r\n        humidity: data.current.humidity,\r\n        pressure: data.current.pressure,\r\n        windSpeed: data.current.wind_speed,\r\n        visibility: data.current.visibility\r\n    };\r\n};\r\n\r\nexport const formatDailyData = (item, key) => {\r\n    return {\r\n        date: getDateOnly(item.dt),\r\n        day: getDay(item.dt),\r\n        key: `${key}${ getDay(item.dt)}`,\r\n        shortDescription: item.weather[0].description,\r\n        icon: item.weather[0].icon,\r\n        weatherStatus: item.weather[0].main,\r\n        humidity: item.humidity,\r\n        windSpeed: item.wind_speed,\r\n        pressure: item.pressure,\r\n        dayTemp: item.temp.day,\r\n        nightTemp: item.temp.night,\r\n        mornTemp: item.temp.morn,\r\n        eveTemp: item.temp.eve,\r\n        minTemp: item.temp.min,\r\n        maxTemp: item.temp.max\r\n    }\r\n\r\n}\r\n\r\nexport const makeOpenWeatherApiRequest = (dispatcher, actionType, data) => {\r\n    fetch(\"https://muterehm3f.execute-api.us-east-2.amazonaws.com/official/apiweatherapp\",\r\n        {\"method\": \"POST\", body: JSON.stringify({ target: 'openWeather', lon: data.lon, lat: data.lat })})\r\n        .then(response => response.json())\r\n        .then(data => { console.log(data); return data })\r\n        .then(resData => {\r\n        //     if (data.current && data.daily) {\r\n                 data.key = `${data.lon}${data.lat}`;\r\n                 data.current = formatCurrentData(resData);\r\n                 data.daily = resData.daily.map(d=>formatDailyData(d,data.key));\r\n                 return data;\r\n        //     }\r\n        //     else throw new Error(`Failed to get forecast for ${data.city}.`);\r\n         })\r\n        .then(data => { dispatcher({ type: actionType, data: data }); return data })\r\n        .then(console.log)\r\n        .catch(error => { Report.failure(error.message, \"API daily request limit exceeded!!\", \"Ok\"); })\r\n\r\n}\r\n\r\nconst navReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'setSelectedOption':\r\n            return { ...state, selectedOption: action.data };\r\n        case 'setOptions':\r\n            return { ...state, options: action.data ? action.data : state.options };\r\n        case 'setInputValue':\r\n            return { ...state, inputValue: action.data };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\nfunction Nav({ appState, appDispatcher }) {\r\n    const state = { selectedOption: null, inputValue: '', options: [], timeout: useRef(null) };\r\n    const [navState, navDispatcher] = useReducer(navReducer, state);\r\n    useEffect(() => {\r\n        // do not fetch new googlePlaces queries when the user selects an option or when the input is an empty string\r\n        if (navState.inputValue && navState.selectedOption !== navState.inputValue) {\r\n            let query = navState.inputValue;\r\n            clearTimeout(navState.timeout.current);\r\n            navState.timeout.current = setTimeout(() => {\r\n                const url = \"https://muterehm3f.execute-api.us-east-2.amazonaws.com/official/apiweatherapp\";\r\n                const options = { \"method\": \"POST\", body: JSON.stringify({ target: 'googlePlaces', query: query }) }\r\n                fetch(url, options)\r\n                    .then(response => response.json())\r\n                    .then(data => (data.results.length) ? data : (function () { throw new Error(`Unable To Fetch Geo Coordinates for ${query}`) }()))\r\n                    .then(data => data.results.map(item => ({ address: item.formatted_address, name:item.name, location: item.geometry.location, name: item.name })\r\n                    ).filter((i, idx) => idx < 10)) // get only top 10 result\r\n                    .then(data => (navDispatcher({ type: 'setOptions', data: data }), data))\r\n                    .then(console.log)\r\n                    .catch(err=>{})\r\n\r\n            }, 400)\r\n        }\r\n    }, [navState.inputValue, navState.selectedOption]);\r\n\r\n\r\n    const submitRequest = () => {\r\n        // only submit request if a user input exists, a drop down option exists, and the user selected a drop down option\r\n        if (navState.selectedOption && navState.inputValue && navState.selectedOption === navState.inputValue) {\r\n            let newLocation = {\r\n                city:navState.selectedOption.name,\r\n                lat: navState.selectedOption.location.lat,\r\n                lon: navState.selectedOption.location.lng,\r\n            };\r\n            makeOpenWeatherApiRequest(appDispatcher, 'addForecast', newLocation);\r\n            navDispatcher({type:'setSelectedOption', data:null});\r\n        }\r\n        else {\r\n             Report.failure(\"Missing Search Query\",\r\n              \"Queries (input) must be selected from the dropdown menu.\",\r\n                 \"Ok\",\r\n                 () => { },\r\n                 { svgSize:'100px', messageFontSize:'14px', messageColor:'#'}\r\n                 );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <AppBar sx={{ position: 'static', backgroundColor: 'black' }}>\r\n            <Toolbar sx={{ p: '6px' }}>\r\n                <Grid container sx={{ alignItems: 'center', direction: { xs: 'column', md: 'row' } }}>\r\n                    {/* brand container */}\r\n                    <Grid container item sx={{ alignItems: 'center', width: { xs: '1', md: 'auto' } }}>\r\n                        {/* brand logo */}\r\n                        <Grid item>\r\n                            <Box display='block' component='img' src={brandIcon} sx={{ width: '2.5rem', height: '2.5rem' }} />\r\n                        </Grid>\r\n                        {/* brand text */}\r\n                        <Grid item>\r\n                            <Typography variant='h6' sx={{ fontWeight: '400' }}>API Weather App</Typography>\r\n                        </Grid>\r\n                        {/* nav collapse button  */}\r\n                        <Grid item sx={{ ml: 'auto' }}>\r\n                            <IconButton onClick={() => appDispatcher({ type: 'toggleCollapseButton' })}>\r\n                                <MenuIcon sx={{ color: 'white', display: { md: 'none', xs: 'block' } }} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* search container */}\r\n                    <Grid item container direction={{ xs: 'column-reverse', sm: 'row' }} spacing='10' justifyContent='center' alignItems='center' flex='1' py='10px'\r\n                        display={{ md: 'flex', xs: `${appState.collapseButton ? 'none' : 'flex'}` }}>\r\n                        {/* search field */}\r\n                        <Grid item flexGrow={{ sm: '1', md: '0.8', lg: '0.5' }} width={{ xs: '100%', sm: 'auto' }}>\r\n                            <Autocomplete sx={{ backgroundColor: 'white', borderRadius: '0.7rem' }}\r\n                                getOptionLabel={(option) => option.address}\r\n                                options={navState.options}\r\n                                filterOptions={(x) => x}\r\n                                value={navState.selectedOption}\r\n                                onChange={(e, newValue) => {\r\n                                    navDispatcher({ type: 'setSelectedOption', data: newValue });\r\n                                    navDispatcher({ type: 'setInputValue', data: newValue });\r\n                                }}\r\n                                onInputChange={(e, newInputValue) => {\r\n                                    navDispatcher({ type: 'setInputValue', data: newInputValue });\r\n                                }}\r\n                                renderInput={(params) =>\r\n                                    <TextField {...params}\r\n                                        InputProps={{\r\n                                            ...params.InputProps,\r\n                                            size: 'small',\r\n                                            placeholder: 'Enter the Name of a Location',\r\n                                            margin: 'dense',\r\n                                            startAdornment: (<InputAdornment position='start'><SearchIcon /></InputAdornment>)\r\n                                        }}\r\n                                    />}\r\n                            />\r\n                        </Grid>\r\n                        {/* button container  */}\r\n                        <Grid item>\r\n                            <Stack direction='row' spacing={1}>\r\n                                <Button variant='outlined' size='small' sx={{ color: 'primary.light', }} onClick={submitRequest} >Get Forecast</Button>\r\n                                <Button variant='outlined' size='small' color='error' sx={{ color: 'error.light' }} onClick={() => appDispatcher({ type: 'openSettings' })}>Options</Button>\r\n                            </Stack>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Nav;","import wallpaper from '../images/wallpaper/wallpaper.jpg';\r\nimport wallpaper2 from '../images/wallpaper/wallpaper2.jpg';\r\nimport wallpaper3 from '../images/wallpaper/wallpaper3.jpg';\r\nimport wallpaper4 from '../images/wallpaper/wallpaper4.jpg';\r\nimport wallpaper5 from '../images/wallpaper/wallpaper5.jpg';\r\nimport wallpaper6 from '../images/wallpaper/wallpaper6.jpg';\r\nimport wallpaper7 from '../images/wallpaper/wallpaper7.jpg';\r\nimport wallpaper8 from '../images/wallpaper/wallpaper8.jpg';\r\nimport wallpaper9 from '../images/wallpaper/wallpaper9.jpg';\r\nimport wallpaper10 from '../images/wallpaper/wallpaper10.jpg';\r\nimport wallpaper11 from '../images/wallpaper/wallpaper11.jpg';\r\nimport wallpaper12 from '../images/wallpaper/wallpaper12.jpg';\r\n\r\nconst wallpaperList = [wallpaper, wallpaper2, wallpaper3,\r\n    wallpaper4, wallpaper5, wallpaper6, wallpaper7, wallpaper8,\r\n    wallpaper9, wallpaper10, wallpaper11, wallpaper12];\r\n\r\nexport default wallpaperList;","export default __webpack_public_path__ + \"static/media/wallpaper.dac49862.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper2.a6e0b2eb.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper3.6c954cbe.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper4.fb7fb6d1.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper5.44dc4f33.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper6.3f11ff0a.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper7.17617cbc.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper8.cbb78813.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper9.002c2ae5.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper10.77df1d32.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper11.f87bb7ee.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper12.062de8f0.jpg\";","import { Alert, Box, Button, Container, Dialog, DialogContent, DialogTitle, Grid, IconButton, ImageList, ImageListItem, Switch, Typography } from '@material-ui/core';\r\nimport wallpaperList from './wallpaperList';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nfunction Options({ appState, appDispatcher }) {\r\n    return (\r\n        <Dialog open={appState.settings} onClose={() => appDispatcher({ type: 'closeSettings' })} fullWidth>\r\n            <DialogTitle sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <Typography variant='h5' sx={{ fontWeight: '500' }}>Options</Typography>\r\n                <IconButton sx={{ ml: 'auto' }} onClick={() => appDispatcher({ type: 'closeSettings' })}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent sx={{ pb:'0px'}}>\r\n                <Grid container spacing={1} direction='column'>\r\n                    <Grid item>\r\n                        <Button variant='contained' size=\"small\" color='error' sx={{mx:'auto', display:'block', borderRadius:'0.5rem'}}>Delete local Storage</Button>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Container sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            <Typography variant='h5' sx={{ fontWeight: '500' }}>°C</Typography>\r\n                            <Switch\r\n                                checked={appState.degUnit === 'F'}\r\n                                onChange={() => appDispatcher({ type: 'toggleDegUnit' })}>\r\n                            </Switch>\r\n                            <Typography variant='h5' sx={{ fontWeight: '500' }}>°F</Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Alert sx={{ mx: 'auto', width:'40%', display:'flex', alignItems:'center'}}>\r\n                            <Typography sx={{fontSize:'1.2rem', fontWeight:'500'}}>Choose a Wallpaper</Typography>\r\n                        </Alert>\r\n                        <ImageList cols={3} rowHeight={110} >\r\n                            {wallpaperList.map((item, key) =>\r\n                                <ImageListItem  key={key} onClick={() => appDispatcher({ type: 'setWallpaper', data: item })}\r\n                                    sx={{ backgroundImage: `url(${item})`, backgroundSize: 'cover', height: '8rem', cursor:'pointer', borderRadius:'0.6rem' }}>\r\n\r\n                                    <Box sx={{ display: `${appState.wallpaper === item ? 'flex' : 'none'}`, justifyContent: 'center', alignItems: 'center', height:'100%' }}>\r\n                                        <CheckCircleIcon sx={{ color: 'error.main', fontSize: '4rem' }} />\r\n                                    </Box>\r\n                                </ImageListItem>\r\n                            )}\r\n                        </ImageList>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default Options;","export default __webpack_public_path__ + \"static/media/pressure.2ad36da1.svg\";","export default __webpack_public_path__ + \"static/media/humidity.5da6ae3c.svg\";","import React, { useState } from 'react';\r\nimport { Grid, Paper, Box, Typography, Stack, IconButton, Menu, MenuItem, Alert } from \"@material-ui/core\";\r\nimport { getTempC, getTempF } from \"../App\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport pressure from \"../images/pressure.svg\";\r\nimport humidity from \"../images/humidity.svg\";\r\nimport { Confirm } from \"notiflix\";\r\n\r\n\r\nconst Item = ({ data, appState, appDispatcher }) => {\r\n    const [openOptions, setOpenOptions] = useState(null);\r\n    const confirmDeleteLocation = (dispatcher, key) => {\r\n        setOpenOptions(null);\r\n        Confirm.show(\r\n            \"❌ Confirm Deletion\",\r\n            \"Are you Sure you want to delete this location?\",\r\n            \"Yes\",\r\n            \"Cancel\",\r\n            () => dispatcher({ type: 'onDeleteForecast', key: key }),\r\n            () => { },\r\n            { titleColor: '#e66146', fontFamily: \"quicksand\", useGoogleFont: false }\r\n        )\r\n    }\r\n    return (\r\n        <Grid item sx={{ width: 'fit-content', mb: '1rem'}}>\r\n            <Paper elevation={3} sx={{ p: '0.6rem', background: 'black', color: 'white', border: '0.13rem solid white', borderRadius: '0.7rem' }}>\r\n                {/* header */}\r\n                <Grid container columnSpacing={2}>\r\n                    <Grid item width='fit-content' flexGrow='1' xs>\r\n                        <Stack>\r\n                            <Typography sx={{ color: 'error.light' }}>{data.current.date}</Typography>\r\n                            <Typography variant='h6' sx={{}}>{data.city}</Typography>\r\n                        </Stack>\r\n                    </Grid>\r\n\r\n                    <Grid item width='fit-content' alignSelf='center' flexGrow='0' xs>\r\n                        <Stack direction='row' spacing={0.5} justifyContent='between'>\r\n                            <Typography sx={{ color: 'warning.light', fontWeight: '500', fontSize: '2.5rem' }}>\r\n                                {appState.degUnit === 'C' ? getTempC(data.current.temp) : getTempF(data.current.temp)}°{appState.degUnit}\r\n                            </Typography>\r\n                            <IconButton id=\"long-button\" onClick={(e) => setOpenOptions(e.currentTarget)} sx={{ color: 'white', alignSelf: 'start' }}>\r\n                                <MoreVertIcon className='text-white hover:text-green-600' />\r\n                            </IconButton>\r\n                            <Menu anchorEl={openOptions} open={Boolean(openOptions)} onClose={() => setOpenOptions(null)}>\r\n                                <MenuItem onClick={() => { appDispatcher({ type: 'setSelectedForecast', key: data.key }); setOpenOptions(null); }}>\r\n                                    Select Location\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => { setOpenOptions(null); console.log(data.key) }}>\r\n                                    Update Location\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => confirmDeleteLocation(appDispatcher, data.key)}>\r\n                                    Delete location\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* body */}\r\n                <Grid container direction='row' justifyContent='between' width='100%' sx={{ backgroundColor: 'warning.mai' }}>\r\n                    {/* weather Status */}\r\n                    <Grid item flexGrow='0.1' sx={{ mt: '-1.5rem' }}>\r\n                        <Stack spacing={-2} alignItems='center'>\r\n                            <Box component='img' width='6rem' src={`http://openweathermap.org/img/wn/${data.current.icon}@2x.png`} />\r\n                            <Typography sx={{ fontWeight: '500', color: 'warning.light', width:'8rem', textAlign:'center' }}>{data.current.shortDescription}</Typography>\r\n                        </Stack>\r\n                    </Grid>\r\n\r\n                    {/* timezone status */}\r\n                    <Grid item flexGrow='1' alignSelf='center' xs>\r\n                        <Stack alignItems='center'>\r\n                            <Typography sx={{ fontWeight: '500', color: 'primary.light' }}>TimeZone</Typography>\r\n                            <Typography sx={{ fontWeight: '400' }}>{data.current.timezone}</Typography>\r\n                        </Stack>\r\n                        <Stack direction='row' spacing={5} justifyContent='center'>\r\n                            <Stack >\r\n                                <Typography sx={{ color: 'primary.light', fontWeight: '500' }}>Sunrise</Typography>\r\n                                <Typography sx={{ fontWeight: '400' }}>{data.current.sunrise}</Typography>\r\n                            </Stack>\r\n                            <Stack sx={{}}>\r\n                                <Typography sx={{ color: 'primary.light', fontWeight: '500' }}>Sunset</Typography>\r\n                                <Typography sx={{ fontWeight: '400' }}>{data.current.sunset}</Typography>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* footer  */}\r\n                <Grid item xs sx={{ backgroundColor: 're', mt: '0.5rem' }}>\r\n                    <Stack direction='row' width='20rem' spacing={2} sx={{ flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                        <Stack spacing='0.3rem' direction='row' alignItems='center'>\r\n                            <Box component='img' width='1.4rem' src={pressure} alt=\"\" ></Box>\r\n                            <Typography >Pressure: <span style={{ color: 'yellow' }}>{data.current.pressure} hPa</span></Typography>\r\n                        </Stack>\r\n                        <Stack spacing='0.2rem' direction='row' alignItems='center'>\r\n                            <Box component='img' width='1.6rem' src={humidity} alt=\"\"></Box>\r\n                            <Typography >Humidity: <span style={{ color: 'yellow' }}>{data.current.humidity}%</span></Typography>\r\n                        </Stack>\r\n                        <Stack spacing='-0.2rem' direction='row' alignItems='center'>\r\n                            <Box component='i' width='1.6rem' className='fas fa-wind' />\r\n                            <Typography >WindSpeed: <span style={{ color: 'yellow' }}>{data.current.windSpeed} m/s</span></Typography>\r\n                        </Stack>\r\n                        <Stack spacing='-0.2rem' direction='row' alignItems='center'>\r\n                            <Box component='i' width='1.6rem' className='fas fa-smog' />\r\n                            <Typography >Visibility: <span style={{ color: 'yellow' }}>{data.current.visibility} m</span></Typography>\r\n                        </Stack>\r\n\r\n                    </Stack>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\n\r\nfunction Locations({ appState, appDispatcher }) {\r\n\r\n    return (\r\n        <Stack spacing={1} sx={{ backgroundColor: 'blu', px: '0.5rem' }}>\r\n             <Alert severity='info' sx={{ width: 'fit-content', alignSelf:'center', mt:'0.5rem', textAlign:'center' }} >Dashboard cards are horizontally scrollable on smaller screens</Alert>\r\n                <Typography variant='h5' alignSelf={{ xs: 'center', md: 'flex-start' }}\r\n                    sx={{\r\n                        backgroundColor: 'black', fontWeight: 'bold', color: 'primary.light',\r\n                        width: 'fit-content', p: '0.3rem', borderRadius: '0.5rem', border: '0.2rem solid', borderColor: 'warning.light'\r\n                    }}>Dashboard</Typography>\r\n            <Grid container spacing={1} flexWrap='nowrap' sx={{ overflowX: 'auto' }}>\r\n                {appState.locationList.map(item =>\r\n                    <Item data={item} key={item.key} appState={appState} appDispatcher={appDispatcher} />)}\r\n            </Grid>\r\n        </Stack>\r\n    )\r\n};\r\n\r\nexport default Locations;","import React, { useState } from 'react';\r\nimport { Grid, Paper, Box, Typography, Stack, IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\nimport { getTempC, getTempF } from \"../App\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport pressure from \"../images/pressure.svg\";\r\nimport humidity from \"../images/humidity.svg\";\r\nimport { Confirm } from \"notiflix\";\r\n\r\nconst Item = ({ appState, data }) => (\r\n        <Grid item  sx={{ minWidth: '22rem',  maxWidth: '22rem', mb: '1rem' }} xs>\r\n            <Paper elevation={3} sx={{ p: '0.6rem', background: 'black', color: 'white', border: '0.13rem solid white', borderRadius: '0.7rem' }}>\r\n                {/* header */}\r\n                <Grid container columnSpacing={2}>\r\n                    <Grid item width='fit-content' flexGrow='1' mb='1rem' xs>\r\n                        <Stack>\r\n                            <Typography sx={{ color: 'error.light' }}>{data.date}</Typography>\r\n                            <Typography variant='h5' sx={{ ml: '1rem', fontWeight: '500' }}>{data.day}</Typography>\r\n                        </Stack>\r\n                    </Grid>\r\n\r\n                    <Grid item={true} width='fit-content' alignSelf='center' flexGrow='0' xs>\r\n                        <Stack direction='row' spacing={0.5} justifyContent='between'>\r\n                            <Typography sx={{ color: 'warning.light', fontWeight: '500', fontSize: '2.5rem' }}>\r\n                                {appState.degUnit === 'C' ? getTempC(data.dayTemp) : getTempF(data.dayTemp)}°{appState.degUnit}\r\n                            </Typography>\r\n                            <IconButton id=\"long-button\" sx={{ color: 'white', alignSelf: 'start', visibility: 'hidden' }}>\r\n                                <MoreVertIcon className='text-white hover:text-green-600' />\r\n                            </IconButton>\r\n\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* body */}\r\n                <Grid container direction='row' justifyContent='between' width='100%' sx={{ backgroundColor: 'warning.mai' }}>\r\n                    {/* weather Status */}\r\n                    <Grid item alignSelf='center' flexGrow='0.1' sx={{ mt: '-1.9rem' }}>\r\n                        <Stack alignItems='center'  spacing={-2}>\r\n                        <Box component='img' width='6rem'  src={`http://openweathermap.org/img/wn/${data.icon}@2x.png`} />\r\n                            <Typography sx={{ fontWeight: '500', color: 'warning.light', width:'8rem', textAlign:'center' }}>{data.shortDescription}</Typography>\r\n                        </Stack>\r\n                    </Grid>\r\n\r\n                    {/* timezone status */}\r\n                    <Grid item flexGrow='1' alignSelf='center' xs>\r\n                        <Stack item direction='row' justifyContent='space-around'>\r\n                            <Typography>\r\n                                <Box component='span' sx={{ color: 'primary.light' }}>Min: </Box>\r\n                                <Box component='span' sx={{ color: 'yellow' }}>\r\n                                    {appState.degUnit === 'C' ? getTempC(data.minTemp) : getTempF(data.minTemp)}°{appState.degUnit}\r\n                                </Box>\r\n                            </Typography>\r\n                            <Typography>\r\n                                <Box component='span' sx={{ color: 'primary.light' }}>Min: </Box>\r\n                                <Box component='span' sx={{ color: 'yellow' }}>\r\n                                    {appState.degUnit === 'C' ? getTempC(data.minTemp) : getTempF(data.minTemp)}°{appState.degUnit}\r\n                                </Box>\r\n                            </Typography>\r\n                        </Stack>\r\n\r\n                        <Stack item direction='row' justifyContent='space-around'>\r\n                            <Typography>\r\n                                <Box component='span' sx={{ color: 'primary.light' }}>Day: </Box>\r\n                                <Box component='span' sx={{ color: 'yellow' }}>\r\n                                    {appState.degUnit === 'C' ? getTempC(data.minTemp) : getTempF(data.minTemp)}°{appState.degUnit}\r\n                                </Box>\r\n                            </Typography>\r\n                            <Typography>\r\n                                <Box component='span' sx={{ color: 'primary.light' }}>Night: </Box>\r\n                                <Box component='span' sx={{ color: 'yellow' }}>\r\n                                    {appState.degUnit === 'C' ? getTempC(data.minTemp) : getTempF(data.minTemp)}°{appState.degUnit}\r\n                                </Box>\r\n                            </Typography>\r\n                        </Stack>\r\n\r\n                        <Stack item direction='row' justifyContent='space-around'>\r\n                            <Typography>\r\n                                <Box component='span' sx={{ color: 'primary.light' }}>Morn: </Box>\r\n                                <Box component='span' sx={{ color: 'yellow' }}>\r\n                                    {appState.degUnit === 'C' ? getTempC(data.minTemp) : getTempF(data.minTemp)}°{appState.degUnit}\r\n                                </Box>\r\n                            </Typography>\r\n                            <Typography>\r\n                                <Box component='span' sx={{ color: 'primary.light' }}>Eve: </Box>\r\n                                <Box component='span' sx={{ color: 'yellow' }}>\r\n                                    {appState.degUnit === 'C' ? getTempC(data.minTemp) : getTempF(data.minTemp)}°{appState.degUnit}\r\n                                </Box>\r\n                            </Typography>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* footer  */}\r\n                <Grid item xs sx={{ backgroundColor: 're', mt: '0.5rem' }}>\r\n                    <Stack direction='row' width='20rem' spacing={2} sx={{ flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                        <Stack spacing='0.3rem' direction='row' alignItems='center'>\r\n                            <Box component='img' width='1.4rem' src={pressure} alt=\"\" ></Box>\r\n                            <Typography >Pressure: <span style={{ color: 'yellow' }}>{data.pressure} hPa</span></Typography>\r\n                        </Stack>\r\n                        <Stack spacing='0.2rem' direction='row' alignItems='center'>\r\n                            <Box component='img' width='1.6rem' src={humidity} alt=\"\"></Box>\r\n                            <Typography >Humidity: <span style={{ color: 'yellow' }}>{data.humidity}%</span></Typography>\r\n                        </Stack>\r\n                        <Stack spacing='-0.2rem' direction='row' alignItems='center'>\r\n                            <Box component='i' width='1.6rem' className='fas fa-wind' />\r\n                            <Typography >WindSpeed: <span style={{ color: 'yellow' }}>{data.windSpeed} m/s</span></Typography>\r\n                        </Stack>\r\n\r\n                    </Stack>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n);\r\n\r\nfunction Forecast({appState}) {\r\n\r\n    return (\r\n        <Stack spacing={1} sx={{ backgroundColor: 'blu', px: '0.5rem' }} >\r\n            <Typography variant='h5' alignSelf={{xs:'center', md:'flex-start'}}\r\n                sx={{\r\n                    backgroundColor: 'black', fontWeight: 'bold', color: 'primary.light', width: 'fit-content',\r\n                    p: '0.3rem', borderRadius: '0.5rem', border: '0.2rem solid', borderColor: 'warning.light', textAlign: 'center'\r\n                }}>\r\n                8-Day Forecast For {appState.selectedForecast.city}\r\n            </Typography>\r\n            <Grid container flexWrap='wrap' columnSpacing={1} maxWidth='90rem' sx={{ justifyContent: 'start' }} >\r\n                {appState.selectedForecast.daily.map(item => <Item data={item} key={item.key} appState={appState}/>)}\r\n            </Grid>\r\n        </Stack>\r\n    )\r\n};\r\n\r\nexport default Forecast;","export default __webpack_public_path__ + \"static/media/sunny.213f9a41.svg\";","import { useReducer } from 'react';\nimport { Box, Grid, Stack, Toolbar } from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport Options from \"./components/Options\";\nimport Locations from \"./components/Locations\";\nimport Forecast from \"./components/Forecast\";\nimport wallpaperList from './components/wallpaperList';\nimport sunny from \"./images/weather-icons/sunny.svg\";\nimport { use100vh } from 'react-div-100vh';\nimport React from 'react';\n\nexport const getTempC = (temp) => ((temp - 32) * (5 / 9)).toFixed(0);\nexport const getTempF = (temp) => ((temp * (9 / 5) + 32)).toFixed(0);\n\n\n\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n}\nconst onDeleteForecast = (locationList, index) => {\n};\n\nconst getData = () => ([\n  {\n    city: '8417 Spruce Hill Dr',\n    lat: '0',\n    lon: '0',\n    key: '00',\n    current: {\n      day: 'Monday',\n      date: 'July, 6th, 08:37am',\n      timezone: 'America/NewYork',\n      sunrise: '08:00am',\n      sunset: '07:00pm',\n      temp: '0',\n      icon: sunny,\n      weatherStatus: 'Sunny',\n      shortDescription: 'Light rain, gentle breeze.',\n      humidity: '100',\n      pressure: '100',\n      windSpeed: '200',\n      visibility: '300'\n    },\n    daily: [\n      ,{\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 00',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 00',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Tuesday',\n        key: 'Tuesday 00',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n    ]\n  },\n  {\n    city: 'chicago',\n    lat: '0',\n    lon: '1',\n    key: '01',\n    current: {\n      day: 'Monday',\n      date: 'July, 6th, 08:37am',\n      timezone: 'America/NewYork',\n      sunrise: '08:00am',\n      sunset: '07:00pm',\n      temp: '0',\n      icon: sunny,\n      weatherStatus: 'Sunny',\n      shortDescription: 'Light rain, gentle breeze.',\n      humidity: '100',\n      pressure: '100',\n      windSpeed: '200',\n      visibility: '300'\n    },\n    daily: [\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 01',\n        shortDescription: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Tuesday',\n        key: 'Tuesday 01',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      }\n    ]\n  }\n  , \n  {\n    city: 'new york',\n    lat: '1',\n    lon: '1',\n    key: '11',\n    current: {\n      day: 'Monday',\n      date: 'July, 6th, 08:37am',\n      timezone: 'America/NewYork',\n      sunrise: '08:00am',\n      sunset: '07:00pm',\n      temp: '0',\n      icon: sunny,\n      weatherStatus: 'Sunny',\n      shortDescription: 'Light rain, gentle breeze.',\n      humidity: '100',\n      pressure: '100',\n      windSpeed: '200',\n      visibility: '300'\n    },\n    daily: [\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      , {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Monday',\n        key: 'Monday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      },\n      {\n        date: 'July, 6th, 08:37am',\n        day: 'Tuesday',\n        key: 'Tuesday 11',\n        description: 'light rain',\n        icon: sunny,\n        weatherStatus: 'Sunny',\n        humidity: '100',\n        windSpeed: '200',\n        pressure: '100',\n        dayTemp: '0',\n        nightTemp: '0',\n        mornTemp: '0',\n        eveTemp: '0',\n        minTemp: '0',\n        maxTemp: '0',\n      }\n    ]\n  }\n]);\nconst state = {\n  locationList: [],\n  selectedForecast: null,\n  settings: false,\n  degUnit: 'F',\n  collapseButton: false,\n  wallpaper: wallpaperList[2 || getRandomInt(12)]\n};\n\nconst dispatcher = (state, action) => {\n  switch (action.type) {\n    case 'addForecast':\n      return { ...state, locationList: [action.data, ...state.locationList], selectedForecast: action.data };\n    case 'setSelectedForecast':\n      return { ...state, selectedForecast: state.locationList.find(location => location.key === action.key) }\n      case 'onDeleteForecast':\n      return {\n        ...state,\n        locationList: state.locationList.filter(d=> d.key !== action.key),\n        selectedForecast: +Boolean(state.selectedForecast) && state.selectedForecast.key === action.key ?\n          state.locationList.find(d => d.key !== action.key) : state.selectedForecast\n      }\n    case 'toggleCollapseButton':\n      return { ...state, collapseButton: !state.collapseButton }\n    case 'setWallpaper':\n      return { ...state, wallpaper: action.data }\n    case 'toggleDegUnit':\n      return { ...state, degUnit: state.degUnit === 'F' ? 'C' : 'F' }\n    case 'openSettings':\n      return { ...state, settings: true };\n    case 'closeSettings':\n      return { ...state, settings: false }\n    default:\n      return state;\n  }\n}\n\n\nfunction App() {\n  const [appState, appDispatcher] = useReducer(dispatcher, state);\n  const height = use100vh()\n  return (\n    <Grid container direction='column' height={height}>\n      <Grid item >\n        <Nav appState={appState} appDispatcher={appDispatcher} />\n      </Grid>\n      <Grid item width='100vw' sx={{\n        backgroundImage: `url(${appState.wallpaper})`, backgroundSize: 'cover',\n        backgroundPosition: 'center', overflowY: 'auto', flex: '1', overflowX: 'hidden'\n      }} >\n        <Stack spacing={3} >\n          <Locations appState={appState} appDispatcher={appDispatcher} />\n          {+Boolean(appState.selectedForecast) && <Forecast appState={appState} />}\n        </Stack>\n      </Grid>\n\n      <Options appState={appState} appDispatcher={appDispatcher} />\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nwindow.console = {\n  ...window.console,\n  error: () => { },\n  warn: () => {},\n \n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}