{"version":3,"sources":["images/brandImg.svg","components/Nav.js","images/wallpaper/wallpaper.jpg","components/wallpaperList.js","images/wallpaper/wallpaper2.jpg","images/wallpaper/wallpaper3.jpg","images/wallpaper/wallpaper4.jpg","images/wallpaper/wallpaper5.jpg","images/wallpaper/wallpaper6.jpg","images/wallpaper/wallpaper7.jpg","images/wallpaper/wallpaper8.jpg","images/wallpaper/wallpaper9.jpg","images/wallpaper/wallpaper10.jpg","images/wallpaper/wallpaper11.jpg","images/wallpaper/wallpaper12.jpg","components/Options.js","App.js","reportWebVitals.js","index.js"],"names":["navReducer","state","action","type","selectedOption","data","inputValue","collapseMenu","Nav","appState","appDispatcher","options","timeout","useRef","useReducer","navState","navDispatcher","AppBar","sx","position","backgroundColor","Toolbar","p","Grid","container","alignItems","direction","xs","md","item","width","Box","display","component","src","brandIcon","height","Typography","variant","fontWeight","ml","IconButton","onClick","color","sm","spacing","justifyContent","flex","py","flexGrow","lg","Autocomplete","borderRadius","getOptionLabel","option","address","value","onChange","e","newValue","onInputChange","newInputValue","renderInput","params","TextField","InputProps","size","placeholder","margin","startAdornment","InputAdornment","Stack","Button","wallpaperList","wallpaper","Options","max","Dialog","open","settings","onClose","fullWidth","DialogTitle","DialogContent","pb","mx","Container","Switch","checked","degUnit","Alert","fontSize","ImageList","cols","rowHeight","map","key","ImageListItem","backgroundImage","backgroundSize","cursor","Math","floor","random","dispatcher","App","rowSpacing","backgroundPosition","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079b32fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brandImg.7eb91340.svg\";","import { useReducer, useRef } from 'react';\r\nimport { Box, AppBar, Toolbar, Grid, Autocomplete, TextField, InputAdornment, Button, Stack, Typography } from '@material-ui/core';\r\nimport brandIcon from \"../images/brandImg.svg\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst navReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'setSelectedOption':\r\n            return { ...state, selectedOption: action.data };\r\n        case 'setInputValue':\r\n            return { ...state, inputValue: action.data };\r\n        case 'toggleCollapseButton':\r\n            return {...state, collapseMenu:!state.collapseMenu}\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nfunction Nav({appState, appDispatcher}) {\r\n    const state = { selectedOption: null, inputValue: '', options: [], collapseMenu: false, timeout: useRef(null)};\r\n    const [navState, navDispatcher] = useReducer(navReducer, state);\r\n    return (\r\n        <>\r\n            <AppBar sx={{ position: 'fixed', backgroundColor: 'black' }}>\r\n                <Toolbar sx={{p:'6px'}}>\r\n                    <Grid container sx={{ alignItems: 'center', direction: { xs: 'column', md: 'row' } }}>\r\n                        {/* brand container */}\r\n                        <Grid container item sx={{ alignItems: 'center', width: { xs: '1', md: 'auto' } }}>\r\n                            {/* brand logo */}\r\n                            <Grid item>\r\n                                <Box display='block' component='img' src={brandIcon} sx={{ width: '2.5rem', height: '2.5rem' }} />\r\n                            </Grid>\r\n                            {/* brand text */}\r\n                            <Grid item>\r\n                                <Typography variant='h6' sx={{fontWeight:'400'}}>API Weather App</Typography>\r\n                            </Grid>\r\n                            {/* nav collapse button  */}\r\n                            <Grid item sx={{ ml: 'auto' }}>\r\n                                <IconButton onClick={()=>navDispatcher({type:'toggleCollapseButton'})}>\r\n                                    <MenuIcon sx={{ color: 'white', display: { md: 'none', xs: 'block' } }} />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* search container */}\r\n                        <Grid item container direction={{ xs: 'column-reverse', sm: 'row' }} spacing='10' justifyContent='center' alignItems='center' flex='1' py='10px'\r\n                            display={{md:'flex', xs:`${navState.collapseMenu? 'none' : 'flex'}`}}>\r\n                            {/* search field */}\r\n                            <Grid item flexGrow={{ sm:'1', md:'0.8', lg:'0.5'}} width={{xs:'100%', sm:'auto'}}>\r\n                                <Autocomplete sx={{ backgroundColor: 'white', borderRadius: '0.7rem' }}\r\n                                    getOptionLabel={(option) => option.address}\r\n                                    options={navState.options}\r\n                                    value={navState.selectedOption}\r\n                                    onChange={(e, newValue) => {\r\n                                        navDispatcher({ type: 'setSelectedOption', data: newValue });\r\n                                        navDispatcher({ type: 'setInputValue', data: newValue });\r\n                                    }}\r\n                                    onInputChange={(e, newInputValue) => {\r\n                                        navDispatcher({ type: 'setInputValue', data: newInputValue });\r\n                                    }}\r\n                                    renderInput={(params) =>\r\n                                        <TextField {...params}\r\n                                            InputProps={{\r\n                                                ...params.InputProps,\r\n                                                size: 'small',\r\n                                                placeholder: 'Enter the Name of a Location',\r\n                                                margin: 'dense',\r\n                                                startAdornment: (<InputAdornment position='start'><SearchIcon /></InputAdornment>)\r\n                                            }}\r\n                                        />}\r\n                                />\r\n                            </Grid>\r\n                            {/* button container  */}\r\n                            <Grid item>\r\n                                <Stack direction='row' spacing={1}>\r\n                                    <Button variant='outlined' size='small' sx={{ color: 'primary.light',  }} >Get Forecast</Button>\r\n                                    <Button variant='outlined' size='small' color='error' sx={{ color: 'error.light' }} onClick={()=>appDispatcher({type:'openSettings'})}>Options</Button>\r\n                                </Stack>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar />\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Nav;","export default __webpack_public_path__ + \"static/media/wallpaper.dac49862.jpg\";","import wallpaper from '../images/wallpaper/wallpaper.jpg';\r\nimport wallpaper2 from '../images/wallpaper/wallpaper2.jpg';\r\nimport wallpaper3 from '../images/wallpaper/wallpaper3.jpg';\r\nimport wallpaper4 from '../images/wallpaper/wallpaper4.jpg';\r\nimport wallpaper5 from '../images/wallpaper/wallpaper5.jpg';\r\nimport wallpaper6 from '../images/wallpaper/wallpaper6.jpg';\r\nimport wallpaper7 from '../images/wallpaper/wallpaper7.jpg';\r\nimport wallpaper8 from '../images/wallpaper/wallpaper8.jpg';\r\nimport wallpaper9 from '../images/wallpaper/wallpaper9.jpg';\r\nimport wallpaper10 from '../images/wallpaper/wallpaper10.jpg';\r\nimport wallpaper11 from '../images/wallpaper/wallpaper11.jpg';\r\nimport wallpaper12 from '../images/wallpaper/wallpaper12.jpg';\r\n\r\nconst wallpaperList = [wallpaper, wallpaper2, wallpaper3,\r\n    wallpaper4, wallpaper5, wallpaper6, wallpaper7, wallpaper8,\r\n    wallpaper9, wallpaper10, wallpaper11, wallpaper12];\r\n\r\nexport default wallpaperList;","export default __webpack_public_path__ + \"static/media/wallpaper2.a6e0b2eb.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper3.6c954cbe.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper4.fb7fb6d1.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper5.44dc4f33.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper6.3f11ff0a.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper7.17617cbc.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper8.cbb78813.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper9.002c2ae5.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper10.77df1d32.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper11.f87bb7ee.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper12.062de8f0.jpg\";","import { Alert, Box, Button, Container, Dialog, DialogContent, DialogTitle, Grid, IconButton, ImageList, ImageListItem, Switch, Typography } from '@material-ui/core';\r\nimport wallpaperList from './wallpaperList';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nfunction Options({ appState, appDispatcher }) {\r\n    return (\r\n        <Dialog open={appState.settings} onClose={() => appDispatcher({ type: 'closeSettings' })} fullWidth>\r\n            <DialogTitle sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <Typography variant='h5' sx={{ fontWeight: '500' }}>Options</Typography>\r\n                <IconButton sx={{ ml: 'auto' }} onClick={() => appDispatcher({ type: 'closeSettings' })}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent sx={{ pb:'0px'}}>\r\n                <Grid container spacing={1} direction='column'>\r\n                    <Grid item>\r\n                        <Button variant='contained' size=\"small\" color='error' sx={{mx:'auto', display:'block', borderRadius:'0.5rem'}}>Delete local Storage</Button>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Container sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            <Typography variant='h5' sx={{ fontWeight: '500' }}>°C</Typography>\r\n                            <Switch\r\n                                checked={appState.degUnit === 'F'}\r\n                                onChange={() => appDispatcher({ type: 'toggleDegUnit' })}>\r\n                            </Switch>\r\n                            <Typography variant='h5' sx={{ fontWeight: '500' }}>°F</Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Alert sx={{ mx: 'auto', width:'40%', display:'flex', alignItems:'center'}}>\r\n                            <Typography sx={{fontSize:'1.2rem', fontWeight:'500'}}>Choose a Wallpaper</Typography>\r\n                        </Alert>\r\n                        <ImageList cols={3} rowHeight={110} >\r\n                            {wallpaperList.map((item, key) =>\r\n                                <ImageListItem  key={key} onClick={() => appDispatcher({ type: 'setWallpaper', data: item })}\r\n                                    sx={{ backgroundImage: `url(${item})`, backgroundSize: 'cover', height: '8rem', cursor:'pointer', borderRadius:'0.6rem' }}>\r\n\r\n                                    <Box sx={{ display: `${appState.wallpaper === item ? 'flex' : 'none'}`, justifyContent: 'center', alignItems: 'center', height:'100%' }}>\r\n                                        <CheckCircleIcon sx={{ color: 'error.main', fontSize: '4rem' }} />\r\n                                    </Box>\r\n                                </ImageListItem>\r\n                            )}\r\n                        </ImageList>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default Options;","import { useReducer } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport Nav from \"./components/Nav\";\nimport wallpaper from \"./images/wallpaper/wallpaper.jpg\";\nimport Options from \"./components/Options\";\nimport wallpaperList from './components/wallpaperList';\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n}\nconst state = { settings: false, degUnit:'F', wallpaper:wallpaperList[getRandomInt(12)]};\nconst dispatcher = (state, action) => {\n  switch (action.type) {\n    case 'setWallpaper':\n      return {...state, wallpaper:action.data}\n    case 'toggleDegUnit':\n      return {...state, degUnit: state.degUnit === 'F'? 'C' : 'F'}\n    case 'openSettings':\n      return { ...state, settings: true };\n    case 'closeSettings':\n      return {...state, settings: false}\n    default:\n    return state;\n  }\n}\nfunction App() {\n  const [appState, appDispatcher] = useReducer(dispatcher, state);\n  return (\n    <>\n      <Nav appState={appState} appDispatcher={appDispatcher}/>\n      <Grid container direction='column' rowSpacing={3} sx={{height:'100vh', backgroundImage:`url(${appState.wallpaper})`, backgroundSize:'cover', backgroundPosition:'center'}}>\n        <Grid item></Grid>\n        <Grid item></Grid>\n      </Grid>\n      <Options appState={appState} appDispatcher={appDispatcher}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}