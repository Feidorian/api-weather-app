{"version":3,"sources":["images/brandImg.svg","images/weatherStates/sunny.svg","components/NavBar.js","images/wallpapers/wallpaper10.jpg","images/humidity.svg","images/pressure.svg","components/Dashboard.js","components/Forecast.js","images/wallpapers/wallpaper.jpg","images/wallpapers/wallpaper2.jpg","images/wallpapers/wallpaper3.jpg","images/wallpapers/wallpaper4.jpg","images/wallpapers/wallpaper5.jpg","images/wallpapers/wallpaper6.jpg","images/wallpapers/wallpaper7.jpg","images/wallpapers/wallpaper8.jpg","images/wallpapers/wallpaper9.jpg","images/wallpapers/wallpaper11.jpg","images/wallpapers/wallpaper12.jpg","components/Options.js","App.js","reportWebVitals.js","index.js"],"names":["getDay","unixTime","moment","unix","format","getDate","hour","parseInt","minute","getTime","formatDailyData","item","date","dt","day","description","weather","icon","sunny","weatherStatus","main","humidity","windSpeed","wind_speed","pressure","dayTemp","temp","nightTemp","night","mornTemp","morn","eveTemp","eve","minTemp","min","maxTemp","max","makeOpenWeatherApiRequest","dispatcher","actionType","data","fetch","body","JSON","stringify","target","lon","lat","then","response","json","resData","current","daily","timezone","sunrise","sunset","visibility","formatCurrentData","map","Error","city","type","console","log","catch","error","Report","failure","message","Search","collapseButton","size","only","useState","value","setValue","inputValue","setInputValue","options","setOptions","timeout","useRef","useEffect","query","clearTimeout","setTimeout","results","address","formatted_address","location","geometry","name","slice","Hidden","mediaQuery","class","Autocomplete","id","className","getOptionLabel","option","filterOptions","x","onChange","e","newValue","onInputChange","newInputValue","renderInput","params","TextField","InputProps","placeholder","margin","startAdornment","InputAdornment","position","Button","variant","onClick","newLocation","lng","svgSize","messageFontSize","messageColor","color","NavBar","forecast","setCollapseButton","useCollapseButton","handleCollapseButton","AppBar","Icon","fontSize","alt","src","brandImg","Typography","mdUp","component","Item","index","openOptions","setOpenOptions","style","minWidth","sx","tempUnit","getTempC","getTempF","IconButton","currentTarget","anchorEl","open","Boolean","onClose","MenuItem","oldData","updateItem","Confirm","show","titleColor","fontFamily","useGoogleFont","onConfirmDeleteLocation","width","marginTop","Dashboard","degUnit","Alert","severity","Grid","forecastList","Forecast","selectedForecast","imageList","wallpaper","wallpaper2","wallpaper3","wallpaper4","wallpaper5","wallpaper6","wallpaper7","wallpaper8","wallpaper9","wallpaper10","wallpaper11","wallpaper12","Options","checked","setChecked","Dialog","openMenu","fullWidth","DialogTitle","DialogContent","Switch","ImageList","cols","rowHeight","key","ImageListItem","backgroundImage","backgroundSize","height","toFixed","reducer","state","action","filter","_","length","forecastTemplate","cover","App","useReducer","localStorage","getItem","parse","setItem","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","warn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d540352.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brandImg.7eb91340.svg\";","export default __webpack_public_path__ + \"static/media/sunny.213f9a41.svg\";","\r\nimport { AppBar, Typography, TextField, InputAdornment, Button, Icon, Hidden } from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport brandImg from \"../images/brandImg.svg\";\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Autocomplete } from \"@material-ui/core\";\r\nimport moment from 'moment';\r\nimport sunny from \"../images/weatherStates/sunny.svg\";\r\nimport { Report } from \"notiflix\";\r\n\r\nexport const getDay = (unixTime) => {\r\n    return moment.unix(unixTime).format(\"dddd\");\r\n};\r\nexport const getDate = (unixTime) => {\r\n    let hour = parseInt(moment.unix(unixTime).format(\"HH\"));\r\n    let minute = moment.unix(unixTime).format(\"mm\");\r\n    hour = hour > 12 ? `${hour - 12}:${minute}pm` : `${hour}:${minute}am`;\r\n    let date = `${moment.unix(unixTime).format(\"MMM, Do,\")} ${hour}`;\r\n    return date;\r\n};\r\nexport const getDateOnly = (unixTime) => {\r\n    return moment.unix(unixTime).format(\"MMM, Do, YYYY\");\r\n}\r\n\r\nexport const getTime = (unixTime) => {\r\n    let hour = parseInt(moment.unix(unixTime).format(\"HH\"));\r\n    let minute = moment.unix(unixTime).format(\"mm\");\r\n    hour = hour > 12 ? `${hour - 12}:${minute}pm` : `${hour}:${minute}am`;\r\n    return hour;\r\n}\r\n\r\nexport const formatCurrentData = (data) => {\r\n    return {\r\n        day: getDay(data.current.dt),\r\n        date: getDate(data.current.dt),\r\n        timezone: data.timezone,\r\n        sunrise: getTime(data.current.sunrise),\r\n        sunset: getTime(data.current.sunset),\r\n        temp: data.current.temp,\r\n        icon: sunny,\r\n        weatherStatus: data.current.weather[0].main,\r\n        description: data.current.weather[0].description,\r\n        humidity: data.current.humidity,\r\n        pressure: data.current.pressure,\r\n        windSpeed: data.current.wind_speed,\r\n        visibility: data.current.visibility\r\n    };\r\n};\r\n\r\nexport const formatDailyData = (item) => {\r\n    return {\r\n        date: getDateOnly(item.dt),\r\n        day: getDay(item.dt),\r\n        description: item.weather[0].description,\r\n        icon: sunny,\r\n        weatherStatus: item.weather[0].main,\r\n        humidity: item.humidity,\r\n        windSpeed: item.wind_speed,\r\n        pressure: item.pressure,\r\n        dayTemp: item.temp.day,\r\n        nightTemp: item.temp.night,\r\n        mornTemp: item.temp.morn,\r\n        eveTemp: item.temp.eve,\r\n        minTemp: item.temp.min,\r\n        maxTemp: item.temp.max\r\n    }\r\n\r\n}\r\n\r\nexport const makeOpenWeatherApiRequest = (dispatcher, actionType, data) => {\r\n    fetch(\"https://muterehm3f.execute-api.us-east-2.amazonaws.com/official/apiweatherapp\",\r\n        {\r\n            \"method\": \"POST\",\r\n            body: JSON.stringify({ target: 'openWeather', lon: data.lon, lat: data.lat })\r\n        }\r\n    )\r\n        .then(response => response.json())\r\n        .then(resData => {\r\n            if (data.current && data.daily) {\r\n                data.current = formatCurrentData(resData);\r\n                data.daily = resData.daily.map(formatDailyData);\r\n                return data;\r\n            }\r\n            else {\r\n                throw new Error(`Failed to get forecast for ${data.city}.`);\r\n            }\r\n        })\r\n        .then(data => { dispatcher({ type: actionType, data: data }); return data })\r\n        .then(console.log)\r\n        .catch(error=>{Report.failure(error.message, \"API daily request limit exceeded!!\", \"Ok\");})\r\n\r\n}\r\n\r\n\r\n\r\nconst useCollapseButton = () => {\r\n    const [collapseButton, setCollapseButton] = useState(false);\r\n    const handleCollapseButton = () => setCollapseButton(!collapseButton);\r\n\r\n    return [collapseButton, handleCollapseButton]\r\n}\r\n\r\nconst Search = ({ collapseButton, dispatcher, size, only }) => {\r\n    const [value, setValue] = useState(null);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const timeout = useRef(null);\r\n\r\n    // fetch a googlePlaces query whenever the search input changes\r\n    useEffect(() => {\r\n        /* :debug \r\n        console.log(inputValue);\r\n        console.log(value);\r\n        */\r\n\r\n        // do not fetch new googlePlaces queries when the user selects an option or when the input is an empty string\r\n        if (inputValue && value !== inputValue) {\r\n            let query = inputValue;\r\n            clearTimeout(timeout.current);\r\n            timeout.current = setTimeout(() => {\r\n                const url = \"https://muterehm3f.execute-api.us-east-2.amazonaws.com/official/apiweatherapp\";\r\n                const options = { \"method\": \"POST\", body: JSON.stringify({ target: 'googlePlaces', query: query }) }\r\n                fetch(url, options)\r\n                    .then(response => response.json())\r\n                    .then(data => data.results.map(item => {\r\n                        return { address: item.formatted_address, location: item.geometry.location, name: item.name }\r\n                    }).slice(0, 10)) // get only top 10 result\r\n                    .then(data => {\r\n                        /* :debug */\r\n                        console.log(data);\r\n                        return data\r\n                    })\r\n                    .then(data => setOptions(options => data ? data : options))\r\n                    .catch(console.log)\r\n\r\n            }, 400)\r\n        }\r\n    }, [inputValue, value])\r\n\r\n    const submitRequest = () => {\r\n        // only submit request if a user input exists, a drop down option exists, and the user selected a drop down option\r\n        if (value && inputValue && value === inputValue) {\r\n            let newLocation = {\r\n                city: value.name,\r\n                lat: value.location.lat,\r\n                lon: value.location.lng,\r\n            };\r\n            makeOpenWeatherApiRequest(dispatcher, 'addForecast', newLocation);\r\n            setValue(null);\r\n        }\r\n        else {\r\n             Report.failure(\"Missing Search Query\",\r\n              \"Queries (input) must be selected from the dropdown menu. If no dropdown option exists, then no forecast exists for the query.\",\r\n                 \"Ok\",\r\n                 () => { },\r\n                 { svgSize:'100px', messageFontSize:'14px', messageColor:'#'}\r\n                 );\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Hidden mediaQuery only={only}>\r\n            <div class={`space-x-2 ${collapseButton ? 'hidden' : 'contents'}`} >\r\n\r\n                <Autocomplete id='search' className={size}\r\n                    getOptionLabel={(option) => option.address}\r\n                    options={options}\r\n                    filterOptions={(x) => x}\r\n                    value={value}\r\n                    onChange={(e, newValue) => {\r\n                        setValue(newValue);\r\n                        setInputValue(newValue);\r\n                    }}\r\n                    onInputChange={(e, newInputValue) => {\r\n                        setInputValue(newInputValue);\r\n                    }}\r\n                    renderInput={(params) =>\r\n                        <TextField {...params}\r\n                            InputProps={{\r\n                                ...params.InputProps,\r\n                                size: 'small',\r\n                                placeholder: 'Enter the Name of a Location',\r\n                                margin: 'dense',\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            class={`w-full bg-white text-black rounded-xl `} />}\r\n                />\r\n\r\n                <div className='flex space-x-2 mb-2 sm:mb-0'>\r\n                    <Button size='small' variant=\"outlined\" className='h-10 lg:self-center' onClick={submitRequest}>Get Forecast</Button>\r\n                    <Button onClick={() => dispatcher({ type: 'openMenu' })} size='small' variant='outlined' color='error' className='h-10 lg:self-center'>Options</Button>\r\n                </div>\r\n            </div>\r\n        </Hidden>\r\n\r\n    )\r\n}\r\n\r\n\r\nfunction NavBar({ dispatcher, forecast }) {\r\n    const [collapseButton, handleCollapseButton] = useCollapseButton();\r\n    return (\r\n\r\n        <AppBar class='bg-black text-white p-2 py-3  w-full'>\r\n            <div id='nav-row' class='flex'>\r\n                <div class='flex space-x-1 items-center'>\r\n                    <Icon fontSize='large'><img alt='brand visual' src={brandImg} /></Icon>\r\n                    <Typography variant='h6'>API Weather App</Typography>\r\n                </div>\r\n                <div class='flex justify-center items-center flex-grow'>\r\n                    <Search dispatcher={dispatcher} size='w-5/12 mx-2' only={['xs', 'sm']} />\r\n                </div>\r\n                <Hidden mdUp>\r\n                    <div class='ml-auto self-center' component='button' onClick={handleCollapseButton} >\r\n                        <MenuIcon color='white' fontSize='large' />\r\n                    </div>\r\n                </Hidden>\r\n            </div>\r\n\r\n            <div class='flex justify-center items-center flex-grow'>\r\n                <Search dispatcher={dispatcher} collapseButton={collapseButton} size='w-5/12' only={['xs', 'lg', 'md', 'xl']} />\r\n            </div>\r\n            <div class='flex flex-col-reverse justify-center items-center flex-grow'>\r\n                <Search dispatcher={dispatcher} collapseButton={collapseButton} size='w-11/12' only={['sm', 'lg', 'md', 'xl']} />\r\n            </div>\r\n        </AppBar>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/wallpaper10.77df1d32.jpg\";","export default __webpack_public_path__ + \"static/media/humidity.5da6ae3c.svg\";","export default __webpack_public_path__ + \"static/media/pressure.2ad36da1.svg\";","\r\nimport { Menu, MenuItem, Typography } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/core\";\r\nimport { Grid, IconButton } from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport humidity from \"../images/humidity.svg\";\r\nimport pressure from \"../images/pressure.svg\";\r\nimport { useState } from 'react';\r\nimport { Confirm } from \"notiflix\";\r\nimport { getTempC, getTempF } from \"../App\";\r\nimport {makeOpenWeatherApiRequest} from './NavBar';\r\n\r\n\r\nconst updateItem = (dispatcher, index, oldData) =>  {\r\n        let newLocation = {\r\n            city: oldData.name,\r\n            lat: oldData.lat,\r\n            lon: oldData.lon,\r\n        };\r\n    makeOpenWeatherApiRequest(dispatcher, 'updateForecast', newLocation);\r\n    }\r\n    \r\nconst Item = ({ data, index, dispatcher, forecast }) => {\r\n    const [openOptions, setOpenOptions] = useState(null);\r\n    const onConfirmDeleteLocation = (dispatcher, index) => {\r\n        setOpenOptions(null);\r\n        Confirm.show(\r\n            \"❌ Confirm Deletion\",\r\n            \"Are you Sure you want to delete this location?\",\r\n            \"Yes\",\r\n            \"Cancel\",\r\n            () => dispatcher({ type: 'deleteForecast', data: index }),\r\n            () => { },\r\n            { titleColor: '#e66146', fontFamily: \"quicksand\", useGoogleFont: false }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div key={index} class=' bg-black text-white flex rounded-lg p-3 mb-3 border-2 flex flex-col' style={{ minWidth: '21rem' }}>\r\n            <div id='header' class='flex flex-grow justify-between'>\r\n                <div id='location-date' class=''>\r\n                    <Typography variant='p' className='font-medium' sx={{ color: 'error.main' }}>\r\n                        {data.current.date}\r\n                    </Typography>\r\n                    <Typography variant='p' className='block  font-medium text-lg'>\r\n                        {data.city}\r\n                    </Typography>\r\n                </div>\r\n\r\n                <div id='temp' class=' text-center self-center'>\r\n                    <Typography variant='p' className='block text-4xl font-medium' sx={{ color: 'warning.light' }}>\r\n                        {forecast.tempUnit === 'C' ? getTempC(data.current.temp) : getTempF(data.current.temp)}°{forecast.tempUnit} </Typography>\r\n                </div>\r\n\r\n                <div id='delete-button' className='w-1/12'>\r\n                    <IconButton id=\"long-button\" onClick={(e) => setOpenOptions(e.currentTarget)}>\r\n                        <MoreVertIcon className='text-white hover:text-green-600' />\r\n                    </IconButton>\r\n                    <Menu anchorEl={openOptions} open={Boolean(openOptions)} onClose={() => setOpenOptions(null)}>\r\n                        <MenuItem onClick={() => { dispatcher({ type: 'setSelectedForecast', data: index }); setOpenOptions(null) }}>Select Location</MenuItem>\r\n                        <MenuItem onClick={() => updateItem(dispatcher, index, data)}>Update Location</MenuItem>\r\n                        <MenuItem onClick={() => onConfirmDeleteLocation(dispatcher, index)}>\r\n                            Delete location\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n\r\n            <div id='content' >\r\n                <div class='flex items-center mb-3 px-3 space-x-5'>\r\n                    <div id='weather-status' class='w-5/12 bg-red-90 flex flex-col items-center justify-center'>\r\n                        <img width='80' className='block' src={data.current.icon} alt='weather' style={{ marginTop: '-20px' }} />\r\n                        <Typography variant='p' className='text-lg text-center' sx={{ marginTop: '-15px' }}>{data.current.weatherStatus}</Typography>\r\n                    </div>\r\n\r\n                    <div className=' flex flex-col mx-auto  w-full'>\r\n                        <div className='self-center text-center font-medium'><span className='text-blue-500'>TimeZone</span> <br />{data.current.timezone}</div>\r\n                        <div className='flex justify-around'>\r\n                            <div className='text-center'><span className='text-blue-500 font-medium'>Sunrise</span> <br />{data.current.sunrise}</div>\r\n                            <div className='text-center'><span className='text-blue-500 font-medium'>Sunset</span> <br /> {data.current.sunset}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='flex flex-wrap space-x-2 justify-center p-1' style={{ width: '20rem' }}>\r\n                    <Typography class='block flex items-center'><img width='23' className='inline-block mr-1' alt='' src={pressure} /> Pressure : <span style={{ color: 'yellow' }}>{data.current.pressure} hPa</span></Typography>\r\n                    <Typography class='block'><img width='25' className='inline-block' alt='' src={humidity} />Humidity : <span style={{ color: 'yellow' }}>{data.current.humidity}%</span></Typography>\r\n                    <Typography class='block'> <i class=\"fas fa-wind\" /> WindSpeed : <span style={{ color: 'yellow' }}>{data.current.windSpeed} m/s</span></Typography>\r\n                    <Typography class='block'><i class=\"fas fa-smog\" /> Visibility  : <span style={{ color: 'yellow' }}>{data.current.visibility} m</span></Typography>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nfunction Dashboard({ degUnit, forecast, dispatcher }) {\r\n\r\n    return (\r\n        <div id='dashboard' class='py-4 px-2 bg-red-90 flex flex-col'>\r\n            <Alert severity='info' className='mx-auto flex justify-center'>\r\n                <Typography class='text-blue-900 font-medium'>\r\n                    Cards are horizontally scrollable (especially on smaller Screen).\r\n                </Typography>\r\n            </Alert>\r\n\r\n            <Typography class='self-start mt-3 block  text-2xl border-2  border-yellow-200\r\n                font-medium  bg-black p-2 rounded-lg text-blue-400' >Dashboard</Typography>\r\n\r\n\r\n            <Grid class='flex justify-start overflow-x-auto space-x-3 mt-4'>\r\n                {forecast.forecastList.map((data, index) => <Item data={data} degUnit={degUnit} dispatcher={dispatcher} forecast={forecast} index={index} />)}\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dashboard;","import { Typography} from \"@material-ui/core\";\r\nimport humidity from \"../images/humidity.svg\";\r\nimport pressure from \"../images/pressure.svg\";\r\nimport { getTempC, getTempF } from \"../App\";\r\n\r\n\r\nconst Item = ({ data, forecast }) => (\r\n    <div  class='bg-green-800 text-white flex rounded-lg p-3 border-2 flex flex-col mb-4' style={{ minWidth: '21rem' }}>\r\n        <div id='header' class='flex flex-grow justify-between'>\r\n            <div id='location-date' class='w-7/12'>\r\n                <Typography variant='p' className='font-medium' sx={{ color: 'error.light' }}>\r\n                    {data.date}\r\n                </Typography>\r\n                <Typography variant='p' className='block text-3xl font-medium'>\r\n                    {data.day}\r\n                </Typography>\r\n            </div>\r\n\r\n            <div id='temp' class='w-5/12 text-center self-center'>\r\n                <Typography variant='p' className='block text-4xl font-medium' sx={{ color: 'warning.light' }}>\r\n                    {forecast.tempUnit === 'C'? getTempC(data.dayTemp) : getTempF(data.dayTemp)}°{forecast.tempUnit}</Typography>\r\n            </div>\r\n\r\n            <div id='delete-button' className='w-1/12'>\r\n                {/* <IconButton id=\"long-button\" onClick={\"\"}>\r\n                    <MoreVertIcon className='text-white hover:text-green-600' />\r\n                </IconButton> */}\r\n            </div>\r\n        </div>\r\n\r\n        <div id='content'>\r\n            <div class='flex mb-3 mt-2'>\r\n                <div id='weather-status' class='w-5/12 bg-red-90 flex flex-col items-center justify-center'>\r\n                    <img width='80' className='block' src={data.icon} alt='weather' style={{ marginTop: '-20px' }} />\r\n                    <Typography variant='p' className='text-lg text-center' sx={{ marginTop: '-15px' }}>{data.description}</Typography>\r\n                </div>\r\n\r\n                <div className='w-7/12 flex flex-col space-y-2 mt-1 font-medium'>\r\n                    <div className='flex justify-around'>\r\n                        <div>Min: {forecast.tempUnit === 'C'? getTempC(data.minTemp): getTempF(data.minTemp)}°{forecast.tempUnit}</div>\r\n                        <div>Max: {forecast.tempUnit === 'C'? getTempC(data.maxTemp) : getTempF(data.maxTemp)}°{forecast.tempUnit}</div>\r\n                    </div>\r\n                    <div className='flex justify-around'>\r\n                        <div>Day: {forecast.tempUnit === 'C'? getTempC(data.dayTemp) : getTempF(data.dayTemp)}°{forecast.tempUnit}</div>\r\n                        <div>Night {forecast.tempUnit === 'C'? getTempC(data.nightTemp): getTempF(data.nightTemp)}°{forecast.tempUnit}</div>\r\n                    </div>\r\n                    <div className='flex justify-around'>\r\n                        <div>Morn: {forecast.tempUnit === 'C'? getTempC(data.mornTemp) : getTempF(data.mornTemp)}°{forecast.tempUnit}</div>\r\n                        <div>Eve: {forecast.tempUnit === 'C'? getTempC(data.eveTemp) :getTempF(data.eveTemp)}°{forecast.tempUnit}</div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className='flex flex-wrap space-x-2 justify-center items-center' style={{ width: '20rem' }}>\r\n                <Typography class='block flex items-center'><img width='23' className='inline-block mr-1' alt='' src={pressure} /> Pressure : <span style={{ color: 'yellow' }}>{data.pressure} hPa</span></Typography>\r\n                <Typography class='block'><img width='25' className='inline-block' alt='' src={humidity} />Humidity : <span style={{ color: 'yellow' }}>{data.humidity}%</span></Typography>\r\n                <Typography class='block'> <i class=\"fas fa-wind\" /> WindSpeed : <span style={{ color: 'yellow' }}>{data.windSpeed} m/s</span></Typography>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nfunction Forecast({forecast}) {\r\n    return (\r\n        < div className = 'w-screen e px-2 text-white flex flex-col' >\r\n            <Typography variant='p' className='self-start text-2xl border-2  border-yellow-200\r\n                font-medium  bg-black p-2 rounded-lg text-blue-400  '>8-Day Forecast For {forecast.selectedForecast.city}</Typography>\r\n\r\n            <div className='flex justify-start overflow-x-auto space-x-3 mt-4 mb-28 lg:mb-0'>\r\n                {forecast.selectedForecast.daily.map((data, index) => <Item data={data} key={index} forecast={forecast} />)}\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Forecast;","export default __webpack_public_path__ + \"static/media/wallpaper.dac49862.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper2.a6e0b2eb.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper3.6c954cbe.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper4.fb7fb6d1.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper5.44dc4f33.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper6.3f11ff0a.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper7.17617cbc.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper8.cbb78813.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper9.002c2ae5.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper11.f87bb7ee.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper12.062de8f0.jpg\";","import { Alert, div, DialogContent, ImageList, ImageListItem, Switch, Typography } from \"@material-ui/core\";\r\nimport { Dialog, DialogTitle, IconButton } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState } from 'react'\r\nimport wallpaper from '../images/wallpapers/wallpaper.jpg';\r\nimport wallpaper2 from '../images/wallpapers/wallpaper2.jpg';\r\nimport wallpaper3 from '../images/wallpapers/wallpaper3.jpg';\r\nimport wallpaper4 from '../images/wallpapers/wallpaper4.jpg';\r\nimport wallpaper5 from '../images/wallpapers/wallpaper5.jpg';\r\nimport wallpaper6 from '../images/wallpapers/wallpaper6.jpg';\r\nimport wallpaper7 from '../images/wallpapers/wallpaper7.jpg';\r\nimport wallpaper8 from '../images/wallpapers/wallpaper8.jpg';\r\nimport wallpaper9 from '../images/wallpapers/wallpaper9.jpg';\r\nimport wallpaper10 from '../images/wallpapers/wallpaper10.jpg';\r\nimport wallpaper11 from '../images/wallpapers/wallpaper11.jpg';\r\nimport wallpaper12 from '../images/wallpapers/wallpaper12.jpg';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\n\r\nconst imageList = [wallpaper, wallpaper2, wallpaper3, wallpaper4, wallpaper5, wallpaper6, wallpaper7, wallpaper8,\r\n    wallpaper9, wallpaper10, wallpaper11, wallpaper12]\r\n\r\n\r\n\r\nfunction Options({ forecast, dispatcher }) {\r\n    const [checked, setChecked] = useState(true);\r\n    const handleChecked = () => {\r\n        if (checked) {\r\n            dispatcher({ type: 'setTempDegC' });\r\n        }\r\n        else {\r\n        dispatcher({ type: 'setTempDegF' })\r\n    };\r\n    setChecked(!checked);\r\n}\r\n\r\nreturn (\r\n    <Dialog onClose={() => dispatcher({ type: 'closeMenu' })} open={forecast.openMenu} fullWidth>\r\n        <div class='p-2' >\r\n            <DialogTitle class='w-100 flex'>\r\n                <Typography class='font-medium text-xl ml-4 w-full'>Options</Typography>\r\n                <IconButton class='ml-auto' onClick={() => dispatcher({ type: 'closeMenu' })}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent class='p-2'>\r\n                <div class='flex items-center justify-center'>\r\n                    <Typography class='font-medium text-2xl'>°C</Typography>\r\n                    <Switch\r\n                        checked={checked}\r\n                        onChange={handleChecked}>\r\n                    </Switch>\r\n                    <Typography class='font-medium text-2xl'>°F</Typography>\r\n                </div>\r\n                <Alert component='div' className='mx-auto mb-2 w-52'>Choose a Wallpaper</Alert>\r\n                <ImageList cols={3} rowHeight={156} >\r\n                    {imageList.map((item, key) =>\r\n                        <ImageListItem key={key} onClick={() => dispatcher({ type: 'setWallpaper', data: item })} class='rounded-lg flex items-center justify-center cursor-pointer'\r\n                            style={{ backgroundImage: `url(${item})`, backgroundSize: 'cover', height: '8rem' }}>\r\n\r\n                            <div className={`${forecast.wallpaper === item ? 'inline-block' : 'invisible'}`}><CheckCircleIcon sx={{ color: 'error.main', fontSize: '4rem' }} /></div>\r\n                        </ImageListItem>\r\n                    )}\r\n                </ImageList>\r\n\r\n            </DialogContent>\r\n        </div>\r\n    </Dialog>\r\n)\r\n};\r\n\r\n\r\nexport default Options;","import React, { useReducer, useEffect } from 'react';\nimport NavBar from \"./components/NavBar\";\nimport cover from \"./images/wallpapers/wallpaper10.jpg\";\nimport Dashboard from \"./components/Dashboard\";\nimport Forecast from \"./components/Forecast\";\nimport Options from \"./components/Options\";\n\n\nexport const getTempC = (temp) => ((temp - 32) * (5 / 9)).toFixed(0);\nexport const getTempF = (temp) => ((temp * (9 / 5) + 32)).toFixed(0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'setForecast':\n      return action.data;\n    case 'addForecast':\n      return { ...state, forecastList: [action.data, ...state.forecastList], selectedForecast: action.data };\n    case 'updateForecast':\n      return {\n        ...state,\n        forecastList: state.forecastList.map((item, index) => index === action.index ? action.data : item),\n        selectedForecast: state.selectedForecast === state.forecastList[action.index] ? action.data : state.selectedForecast\n      };\n    case 'deleteForecast':\n      return {\n        ...state,\n        forecastList: state.forecastList.filter((_, index) => index !== action.data),\n        selectedForecast: (state.selectedForecast === state.forecastList[action.data] ?\n          (state.forecastList.length === 1 ? null :\n            state.forecastList[action.data === 0 ? state.forecastList.length - 1 : action.data - 1]) : state.selectedForecast)\n      };\n    case 'setSelectedForecast':\n      return { ...state, selectedForecast: (state.forecastList[action.data] || null) };\n    case 'setTempDeg':\n      return { ...state };\n    case 'setWallpaper':\n      return { ...state, wallpaper: action.data };\n    case 'openMenu':\n      return { ...state, openMenu: true };\n    case 'closeMenu':\n      return { ...state, openMenu: false };\n    case 'setTempDegC':\n      return { ...state, tempUnit: 'C' };\n    case 'setTempDegF':\n      return { ...state, tempUnit: 'F' };\n    default:\n      return { ...state }\n  }\n}\n\n\nconst forecastTemplate = {\n  forecastList: [],\n  selectedForecast: null,\n  wallpaper: cover,\n  tempUnit: 'F',\n  openMenu: false\n};\n\nfunction App() {\n  const [forecast, dispatcher] = useReducer(reducer, forecastTemplate);\n\n  useEffect(() => {\n    if (localStorage.getItem('forecast')) {\n      dispatcher({ type: 'setForecast', data: JSON.parse(localStorage.getItem('forecast')) })\n    }\n    else {\n      dispatcher({ type: 'setSelectedForecast', data: 0 });\n    }\n  }, [dispatcher])\n\n\n\n  useEffect(() => {\n    localStorage.setItem('forecast', JSON.stringify(forecast))\n  }, [forecast])\n\n\n  return (\n    <div class='h-screen break-words flex flex-col' style={{ overflow: 'hidden', backgroundImage: `url(${forecast.wallpaper})`, backgroundSize: 'cover' }}>\n      <NavBar dispatcher={dispatcher} forecast={forecast} />\n      <div class=\"overflow-x-auto\">\n        <Dashboard forecast={forecast} dispatcher={dispatcher} />\n        {forecast.selectedForecast && <Forecast forecast={forecast} dispatcher={dispatcher} />}\n        <Options forecast={forecast} dispatcher={dispatcher} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// const getData = () => [\n//   {\n//     city: '8417 Spruce Hill Dr',\n//     lat: '',\n//     lon: '',\n//     key: `${1234}${5678}`,\n//     current: {\n//       day: 'Monday',\n//       date: 'July, 6th, 08:37am',\n//       timezone: 'America/NewYork',\n//       sunrise: '08:00am',\n//       sunset: '07:00pm',\n//       temp: '0',\n//       icon: sunny,\n//       weatherStatus: 'Sunny',\n//       shortDescription: 'Light rain, gentle breeze.',\n//       humidity: '100',\n//       pressure: '100',\n//       windSpeed: '200',\n//       visibility: '300'\n//     },\n//     daily: [\n//       {\n//         date: 'July, 6th, 08:37am',\n//         day: 'Monday',\n//         description: 'light rain',\n//         icon: sunny,\n//         weatherStatus: 'Sunny',\n//         humidity: '100',\n//         windSpeed: '200',\n//         pressure: '100',\n//         dayTemp: '0',\n//         nightTemp: '0',\n//         mornTemp: '0',\n//         eveTemp: '0',\n//         minTemp: '0',\n//         maxTemp: '0',\n//       },\n//     ]\n//   },\n// ];\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nwindow.console = {\n  ...window.console,\n  error: () => { },\n  warn: () => {},\n \n};\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <App />\n     \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}